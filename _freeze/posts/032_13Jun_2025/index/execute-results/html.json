{
  "hash": "9cbb0b24a26332247a23b42065e2f240",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Model Prediction/Visualisation <br> 6. Survival Analysis - Cox Model\"\ndate: 2025-06-13\ncategories: [code, concept, modelling, visualisation]\n# image: \"images/plot.png\"\ndescription: \"How to survive visualising the Cox model.\"\n---\n\n\nIn the last post in this series on model prediction and visualisation in `R` we are going to talk about survival analysis and specifically the Cox model. Like the extensions to the standard linear model that we most recently discussed - the GLM and LMM - predicting with the Cox model is also relatively straightforward, but the intuition in how those predictions are calculated may be less so. I hope to make that easier for you today.\n\nWe're going to use the inbuilt `GBSG2` dataset form the `TH.data` package, so please install that package if you don't already have it. The dataframe contains observations from the German Breast Cancer Study Group 2 study of `686` women, examining the effects of hormone treatment on recurrence-free survival time. The [variables](https://cran.r-project.org/web/packages/TH.data/TH.data.pdf) we'll be using are:\n\n-   `time` - recurrence free survival time (in days).\n-   `cens` - censoring indicator (0- censored, 1- event).\n-   `horTh` - hormonal therapy, a factor at two levels (yes and no).\n-   `tsize` - tumor size (in mm).\n\nThe first few rows of the data look like:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(survival)\nlibrary(survminer)\nlibrary(tidyverse)\nlibrary(gtsummary)\nlibrary(kableExtra)\n# Load data\ndata(GBSG2, package = \"TH.data\")\nGBSG2 |> \n  select(time, cens, horTh, tsize) |> \n  head(10) |> \n  kable(align = \"c\", digits = 2)\n```\n\n::: {.cell-output-display}\n\n\n| time | cens | horTh | tsize |\n|:----:|:----:|:-----:|:-----:|\n| 1814 |  1   |  no   |  21   |\n| 2018 |  1   |  yes  |  12   |\n| 712  |  1   |  yes  |  35   |\n| 1807 |  1   |  yes  |  17   |\n| 772  |  1   |  no   |  35   |\n| 448  |  1   |  no   |  57   |\n| 2172 |  0   |  yes  |   8   |\n| 2161 |  0   |  no   |  16   |\n| 471  |  1   |  no   |  39   |\n| 2014 |  0   |  no   |  18   |\n\n\n:::\n:::\n\n\n<br>\n\nThe first thing we can do is to plot the empirical survival curve by calling on the Kaplan-Meier estimator - stratifying this by whether a woman received hormone therapy or not.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Kaplan-Meier fit\nfit <- survfit(Surv(time, cens) ~ horTh, data = GBSG2)\n# Plot KM fit\nggsurvplot(fit, \n           risk.table = TRUE,\n           submain = \"Kaplan-Meier Survival Curves for Hormone Therapy Use\") +\n  theme_survminer(\n     font.submain = 22,\n     font.x = 18,\n     font.y = 18,\n     font.legend = 16,\n     font.tickslab = 14)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=1152}\n:::\n:::\n\n\nIt appears that unadjusted for other potentially confounding factors, women who take hormone therapy have a better chance of survival - an unsurprising finding I'm sure you would agree.\n\nLet's fit a Cox model to the data, now also adjusting for tumour size.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncox_mod <- coxph(Surv(time, cens) ~ horTh + tsize, data = GBSG2)\ntbl_regression(cox_mod, exp = T)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"piohnauost\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#piohnauost table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#piohnauost thead, #piohnauost tbody, #piohnauost tfoot, #piohnauost tr, #piohnauost td, #piohnauost th {\n  border-style: none;\n}\n\n#piohnauost p {\n  margin: 0;\n  padding: 0;\n}\n\n#piohnauost .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#piohnauost .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#piohnauost .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#piohnauost .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#piohnauost .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#piohnauost .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#piohnauost .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#piohnauost .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#piohnauost .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#piohnauost .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#piohnauost .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#piohnauost .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#piohnauost .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#piohnauost .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#piohnauost .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#piohnauost .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#piohnauost .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#piohnauost .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#piohnauost .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#piohnauost .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#piohnauost .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#piohnauost .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#piohnauost .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#piohnauost .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#piohnauost .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#piohnauost .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#piohnauost .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#piohnauost .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#piohnauost .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#piohnauost .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#piohnauost .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#piohnauost .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#piohnauost .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#piohnauost .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#piohnauost .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#piohnauost .gt_left {\n  text-align: left;\n}\n\n#piohnauost .gt_center {\n  text-align: center;\n}\n\n#piohnauost .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#piohnauost .gt_font_normal {\n  font-weight: normal;\n}\n\n#piohnauost .gt_font_bold {\n  font-weight: bold;\n}\n\n#piohnauost .gt_font_italic {\n  font-style: italic;\n}\n\n#piohnauost .gt_super {\n  font-size: 65%;\n}\n\n#piohnauost .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#piohnauost .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#piohnauost .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#piohnauost .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#piohnauost .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#piohnauost .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#piohnauost .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;HR&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>HR</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;95% CI&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>95% CI</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;p-value&lt;/strong&gt;\"><strong>p-value</strong></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">horTh</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"ci\" class=\"gt_row gt_center\"><br /></td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    no</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">—</td>\n<td headers=\"ci\" class=\"gt_row gt_center\">—</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    yes</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">0.69</td>\n<td headers=\"ci\" class=\"gt_row gt_center\">0.54, 0.88</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\">0.003</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">tsize</td>\n<td headers=\"estimate\" class=\"gt_row gt_center\">1.02</td>\n<td headers=\"ci\" class=\"gt_row gt_center\">1.01, 1.02</td>\n<td headers=\"p.value\" class=\"gt_row gt_center\"><0.001</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"4\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> HR = Hazard Ratio, CI = Confidence Interval</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n\n:::\n:::\n\n\nThe model results suggest (in agreement with the KM curve) that holding tumour size constant, there is an \\~ `31%` reduction in the risk of recurrence for women who take hormone therapy. Similarly, within strata of hormone therapy, each additional mm increase in tumour size is associated with an \\~ `2%` increase in the risk of recurrence over time.\n\n# Visualising Cox Model Predictions - Auto Mode\n\nLet's say we are now interested in predicting survival as a function of both hormone therapy use and tumour size. Well we can just call `predict()` on our Cox model, specifying a new grid of data to predict on, which at minimum must include our time and status (which we set to `1`) variables. In addition I have asked to predict survival for four covariate combinations (tumour sizes of `3` and `120` mm are the minimum and maximum values in the dataset):\n\n1.  hormone therapy = `no  (0)` and tumour size = `3` mm\n2.  hormone therapy = `yes (1)` and tumour size = `3` mm\n3.  hormone therapy = `no  (0)` and tumour size = `120` mm\n4.  hormone therapy = `yes (1)` and tumour size = `120` mm\n\nNote that we need to make one small tweak in `predict()` which is to include an argument for prediction type - in this case we want **\"survival\"** (note there are [additional types](https://stat.ethz.ch/R-manual/R-devel/library/survival/html/predict.coxph.html) that you can specify depending on what you want to predict from the model).\n\nThe code to do this is shown below. The reason I'm calling this \"auto mode\" is that there's really nothing different here to what we have done so far - we pretty much just let predict handle everything.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create new data grid to predict on\nnewdat <- expand.grid(time = seq(0, 2500, by = 50), \n                      cens = 1, \n                      horTh = levels(GBSG2$horTh),\n                      tsize = c(min(GBSG2$tsize), max(GBSG2$tsize)))\n# Calculate predicted survival probabilities\npreds <- predict(cox_mod, newdata = newdat, type = \"survival\", se.fit = TRUE)\nnewdat$prob_surv <- preds$fit\n# If wanting to calculate 95% C.I.'s...\nnewdat$lcl_surv <- preds$fit - 1.96*preds$se.fit\nnewdat$ucl_surv <- preds$fit + 1.96*preds$se.fit\n# View predictions\nhead(newdat, 10) |> \n  kable(align = \"c\", digits = 4)\n```\n\n::: {.cell-output-display}\n\n\n| time | cens | horTh | tsize | prob_surv | lcl_surv | ucl_surv |\n|:----:|:----:|:-----:|:-----:|:---------:|:--------:|:--------:|\n|  0   |  1   |  no   |   3   |  1.0000   |  1.0000  |  1.0000  |\n|  50  |  1   |  no   |   3   |  1.0000   |  1.0000  |  1.0000  |\n| 100  |  1   |  no   |   3   |  0.9978   |  0.9948  |  1.0009  |\n| 150  |  1   |  no   |   3   |  0.9956   |  0.9913  |  1.0000  |\n| 200  |  1   |  no   |   3   |  0.9823   |  0.9730  |  0.9917  |\n| 250  |  1   |  no   |   3   |  0.9723   |  0.9600  |  0.9845  |\n| 300  |  1   |  no   |   3   |  0.9599   |  0.9445  |  0.9753  |\n| 350  |  1   |  no   |   3   |  0.9439   |  0.9248  |  0.9630  |\n| 400  |  1   |  no   |   3   |  0.9231   |  0.8994  |  0.9468  |\n| 450  |  1   |  no   |   3   |  0.9079   |  0.8810  |  0.9347  |\n\n\n:::\n:::\n\n\n<br>\n\nAnd then we can plot the predictions like so using `ggplot`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create 'labeller' for tumour size\ntum_names <- as_labeller(\n     c(`3` = \"Tumour Size = 3 mm\", `120` = \"Tumour Size = 120 mm\"))\n# Plot\nggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +\n  geom_line(linewidth = 1) +\n  facet_wrap(tsize ~ ., labeller = tum_names) +\n  scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +\n  labs(x = \"Recurrence-Free Survival (Days)\",\n       y = \"Predicted Probability of Survival\",\n       title = \"Probability of Survival as a Function of Hormone Therapy and Tumour Size\",\n       color = \"Hormone Therapy\") +\n  theme_bw(base_size = 20) + theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=1152}\n:::\n:::\n\n\nThese visualisations confirm our intuition that survival is better for women with smaller tumours and who also take hormone therapy to manage their disease.\n\n# Visualising Cox Model Predictions - Manual Mode\n\nUltimately, what I have described above is all you need to know if you want to visualise predictions from the Cox model. But if you are interested in understanding at a deeper level how the predicted values are calculated, I'll also take you through \"manual mode\".\n\nAn important first point to grasp is that estimation of the baseline hazard function is essential to predicting survival probabilities in time-to-event models. You can think of the baseline hazard function as the equivalent of the intercept in a standard linear model. These provide an **absolute** value of the outcome from which **relative** 'effect' estimates are computed. For example, the hazard ratio in a Cox model represents a proportional change in the hazard rate for one covariate category (e.g. hormone therapy = yes \\[coded as 1\\]) relative to a reference covariate category (e.g. hormone therapy = no \\[coded as 0\\]) which is assumed to take the shape of the baseline hazard rate function. The baseline hazard rate itself can vary over time, but the proportional change should remain the same (if the proportional hazards assumption is satisfied). I have briefly touched on these ideas in a [previous post](https://msni-stats-tips.netlify.app/posts/021_01nov_2024/#semi-parametric-cox-model). The comparison with the linear model is in the regression coefficient representing a relative average change from the model intercept, which if you recall is the mean value of the outcome when all covariate values are at `0` or at their reference level. Similarly, the baseline hazard rate function is referred to as *baseline* because it represents the hazard rate function when all covariate values are at `0` or at their reference level.\n\nNow, while fully-parametric survival models assume a particular statistical distribution for the baseline hazard rate and estimate it by default, the semi-parametric nature of the Cox model allows hazard ratios to be computed without any knowledge of the function. Consequently, we cannot directly obtain survival probabilities from it, but we can do a little post-hoc \"under-the-hood\" processing to combine it with a non-parametric estimator of the baseline hazard function (typically the **Breslow** estimator) - and estimate survival probabilities that way.\n\nIn `R` we can use the [`basehaz()`](https://stat.ethz.ch/R-manual/R-devel/library/survival/html/basehaz.html) function to calculate the **cumulative** baseline hazard function `H(t)`. This is different to the baseline hazard rate function that we have discussed until now. The cumulative baseline hazard function represents the integral of the baseline hazard rate function from `0` to `t`, and can be thought of as the total accumulated risk of experiencing the event of interest by time `t`. Because it is more computationally stable to work with, `H(t)` acts as a useful link in deriving survival probabilities from hazard rates. Once we know the cumulative baseline hazard function, it's very easy to find the commensurate survival function `S(t)` (the probability that the event of interest has not occurred by time `t`) by simply exponentiating the negative of `H(t)` - i.e.:\n\n$$ S(t) = e^{-H(t)} $$ More detail can be found [here](https://www.graphpad.com/guides/prism/latest/statistics/stat_cox_math_cumulative_hazard.htm).\n\nLet's now put this process into action with the existing data. We can essentially break this down into five steps which I have labelled accordingly in the code below to help you follow the description:\n\n## Step 1\n\nThe first thing we need to do is to estimate the cumulative baseline hazard function (`H0`) when all covariate values are at `0` or at their reference level. We do this using specifying `centered = FALSE` in the call to `basehaz()`. It is important to include the `centered = F` argument as the default setting is `TRUE` which we don't want as this has a different interpretation (i.e. cumulative hazard function estimated at the mean of all covariate values). Also note that the cumulative hazard is estimated at each of the *observed* times in the dataset.\n\n## Step 2\n\nWe then estimate the cumulative hazard function (`H1` - `H4`) for each covariate combination of interest. For these data we have four as I have listed above. As an example, to calculate `H1` we simply multiply `H0` by the covariate combination values and their respective Cox model coefficients. e.g.:\n\n`H1 <- H0$hazard * exp((0 * cox_mod$coefficients[1]) + (3 * cox_mod$coefficients[2]))`\n\nIn the above `cox_mod$coefficients[1]` gives the coefficient value for hormone therapy and `cox_mod$coefficients[2]` gives the coefficient value for tumour size. To obtain the cumulative hazard function for the first covariate combination we just multiply the cumulative baseline hazard function by the exponent of the sum of the products of the coefficients and our covariate values of interest (in this case `0` to indicate no hormone therapy and `3` to indicate the tumour size).\n\n## Step 3\n\nWe then calculate the survival function for each covariate combination by taking the exponent of the negative of the cumulative hazard function.\n\n## Step 4\n\nNow we create a dataframe containing the predicted survival probabilities for each covariate combination. The first `20` rows for each covariate combination is shown below.\n\n## Step 5\n\nThen we create our plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1\n# Estimate the cumulative baseline hazard function\nH0 <- basehaz(cox_mod, centered = F)\n\n# Step 2\n# Calculate cumulative hazard function for covariate combo 1.\nH1 <- H0$hazard * exp((0 * cox_mod$coefficients[1]) + (3 * cox_mod$coefficients[2]))\n# Calculate cumulative hazard function for covariate combo 2.\nH2 <- H0$hazard * exp((1 * cox_mod$coefficients[1]) + (3 * cox_mod$coefficients[2]))\n# Calculate cumulative hazard function for covariate combo 3.\nH3 <- H0$hazard * exp((0 * cox_mod$coefficients[1]) + (120 * cox_mod$coefficients[2]))\n# Calculate cumulative hazard function for covariate combo 4.\nH4 <- H0$hazard * exp((1 * cox_mod$coefficients[1]) + (120 * cox_mod$coefficients[2]))\n\n# Step 3\n# Calculate survival function for covariate combo 1.\nS1 <- exp(-H1)\n# Calculate survival function for covariate combo 2.\nS2 <- exp(-H2)\n# Calculate survival function for covariate combo 3.\nS3 <- exp(-H3)\n# Calculate survival function for covariate combo 4.\nS4 <- exp(-H4)\n\n# Step 4\n# Create dataframe of predicted survival probabilities as a function of covariate combos\nsurv_df <-  rbind(data.frame(combo = 1, time = H0$time, horTh = 0, tsize = 3, prob_surv = S1),\n                  data.frame(combo = 2, time = H0$time, horTh = 1, tsize = 3, prob_surv = S2),\n                  data.frame(combo = 3, time = H0$time, horTh = 0, tsize = 120, prob_surv = S3),\n                  data.frame(combo = 4, time = H0$time, horTh = 1, tsize = 120, prob_surv = S4))\n\n# Inspect each df\nhead(data.frame(combo = 1, time = H0$time, horTh = 0, tsize = 3, prob_surv = S1), 20) |> \n  kable(align = \"c\", digits = 4)\n```\n\n::: {.cell-output-display}\n\n\n| combo | time | horTh | tsize | prob_surv |\n|:-----:|:----:|:-----:|:-----:|:---------:|\n|   1   |  8   |   0   |   3   |  1.0000   |\n|   1   |  15  |   0   |   3   |  1.0000   |\n|   1   |  16  |   0   |   3   |  1.0000   |\n|   1   |  17  |   0   |   3   |  1.0000   |\n|   1   |  18  |   0   |   3   |  1.0000   |\n|   1   |  29  |   0   |   3   |  1.0000   |\n|   1   |  42  |   0   |   3   |  1.0000   |\n|   1   |  46  |   0   |   3   |  1.0000   |\n|   1   |  57  |   0   |   3   |  1.0000   |\n|   1   |  63  |   0   |   3   |  1.0000   |\n|   1   |  65  |   0   |   3   |  1.0000   |\n|   1   |  67  |   0   |   3   |  1.0000   |\n|   1   |  71  |   0   |   3   |  1.0000   |\n|   1   |  72  |   0   |   3   |  0.9989   |\n|   1   |  98  |   0   |   3   |  0.9978   |\n|   1   | 113  |   0   |   3   |  0.9967   |\n|   1   | 114  |   0   |   3   |  0.9967   |\n|   1   | 120  |   0   |   3   |  0.9956   |\n|   1   | 148  |   0   |   3   |  0.9956   |\n|   1   | 160  |   0   |   3   |  0.9945   |\n\n\n:::\n\n```{.r .cell-code}\nhead(data.frame(combo = 2, time = H0$time, horTh = 1, tsize = 3, prob_surv = S2), 20) |> \n  kable(align = \"c\", digits = 4)\n```\n\n::: {.cell-output-display}\n\n\n| combo | time | horTh | tsize | prob_surv |\n|:-----:|:----:|:-----:|:-----:|:---------:|\n|   2   |  8   |   1   |   3   |  1.0000   |\n|   2   |  15  |   1   |   3   |  1.0000   |\n|   2   |  16  |   1   |   3   |  1.0000   |\n|   2   |  17  |   1   |   3   |  1.0000   |\n|   2   |  18  |   1   |   3   |  1.0000   |\n|   2   |  29  |   1   |   3   |  1.0000   |\n|   2   |  42  |   1   |   3   |  1.0000   |\n|   2   |  46  |   1   |   3   |  1.0000   |\n|   2   |  57  |   1   |   3   |  1.0000   |\n|   2   |  63  |   1   |   3   |  1.0000   |\n|   2   |  65  |   1   |   3   |  1.0000   |\n|   2   |  67  |   1   |   3   |  1.0000   |\n|   2   |  71  |   1   |   3   |  1.0000   |\n|   2   |  72  |   1   |   3   |  0.9992   |\n|   2   |  98  |   1   |   3   |  0.9985   |\n|   2   | 113  |   1   |   3   |  0.9977   |\n|   2   | 114  |   1   |   3   |  0.9977   |\n|   2   | 120  |   1   |   3   |  0.9970   |\n|   2   | 148  |   1   |   3   |  0.9970   |\n|   2   | 160  |   1   |   3   |  0.9962   |\n\n\n:::\n\n```{.r .cell-code}\nhead(data.frame(combo = 3, time = H0$time, horTh = 0, tsize = 120, prob_surv = S3), 20) |> \n  kable(align = \"c\", digits = 4)\n```\n\n::: {.cell-output-display}\n\n\n| combo | time | horTh | tsize | prob_surv |\n|:-----:|:----:|:-----:|:-----:|:---------:|\n|   3   |  8   |   0   |  120  |  1.0000   |\n|   3   |  15  |   0   |  120  |  1.0000   |\n|   3   |  16  |   0   |  120  |  1.0000   |\n|   3   |  17  |   0   |  120  |  1.0000   |\n|   3   |  18  |   0   |  120  |  1.0000   |\n|   3   |  29  |   0   |  120  |  1.0000   |\n|   3   |  42  |   0   |  120  |  1.0000   |\n|   3   |  46  |   0   |  120  |  1.0000   |\n|   3   |  57  |   0   |  120  |  1.0000   |\n|   3   |  63  |   0   |  120  |  1.0000   |\n|   3   |  65  |   0   |  120  |  1.0000   |\n|   3   |  67  |   0   |  120  |  1.0000   |\n|   3   |  71  |   0   |  120  |  1.0000   |\n|   3   |  72  |   0   |  120  |  0.9935   |\n|   3   |  98  |   0   |  120  |  0.9871   |\n|   3   | 113  |   0   |  120  |  0.9807   |\n|   3   | 114  |   0   |  120  |  0.9807   |\n|   3   | 120  |   0   |  120  |  0.9743   |\n|   3   | 148  |   0   |  120  |  0.9743   |\n|   3   | 160  |   0   |  120  |  0.9679   |\n\n\n:::\n\n```{.r .cell-code}\nhead(data.frame(combo = 4, time = H0$time, horTh = 1, tsize = 120, prob_surv = S4), 20) |> \n  kable(align = \"c\", digits = 4)\n```\n\n::: {.cell-output-display}\n\n\n| combo | time | horTh | tsize | prob_surv |\n|:-----:|:----:|:-----:|:-----:|:---------:|\n|   4   |  8   |   1   |  120  |  1.0000   |\n|   4   |  15  |   1   |  120  |  1.0000   |\n|   4   |  16  |   1   |  120  |  1.0000   |\n|   4   |  17  |   1   |  120  |  1.0000   |\n|   4   |  18  |   1   |  120  |  1.0000   |\n|   4   |  29  |   1   |  120  |  1.0000   |\n|   4   |  42  |   1   |  120  |  1.0000   |\n|   4   |  46  |   1   |  120  |  1.0000   |\n|   4   |  57  |   1   |  120  |  1.0000   |\n|   4   |  63  |   1   |  120  |  1.0000   |\n|   4   |  65  |   1   |  120  |  1.0000   |\n|   4   |  67  |   1   |  120  |  1.0000   |\n|   4   |  71  |   1   |  120  |  1.0000   |\n|   4   |  72  |   1   |  120  |  0.9955   |\n|   4   |  98  |   1   |  120  |  0.9911   |\n|   4   | 113  |   1   |  120  |  0.9867   |\n|   4   | 114  |   1   |  120  |  0.9867   |\n|   4   | 120  |   1   |  120  |  0.9822   |\n|   4   | 148  |   1   |  120  |  0.9822   |\n|   4   | 160  |   1   |  120  |  0.9778   |\n\n\n:::\n:::\n\n\n<br>\n\n...and Voilà.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 5\n# Create 'labeller' for tumour size\ntum_names <- as_labeller(\n  c(`3` = \"Tumour Size = 3 mm\", `120` = \"Tumour Size = 120 mm\"))\n# Plot\nggplot(surv_df, aes(x = time, y = prob_surv, color = factor(horTh))) +\n  geom_line(linewidth = 1) +\n  facet_wrap(tsize ~ ., labeller = tum_names) +\n  scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +\n  labs(x = \"Recurrence-Free Survival (Days)\",\n       y = \"Predicted Probability of Survival\",\n       title = \"Probability of Survival as a Function of Hormone Therapy and Tumour Size\",\n       color = \"Hormone Therapy\") +\n  theme_bw(base_size = 20) + theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=1152}\n:::\n:::\n\n\n# End Mode\n\nThat brings us to an end in this series on model prediction and visualisation in `R`. I hope it's given you some appreciation for how much further you can take your regression modelling endeavours. I find being able to 'see' what my model is proposing as a reflection of reality to be an invaluable addition to the simply listing of a bunch of coefficient values that we tend to take as the final product of model estimation. We don't need to - and in fact we shouldn't - stop there. You are familiar with the statistical adage of 'always plot your data'. Well, in becoming a better data analyst I think a similar argument could be made for 'always plot your models'.\n\nUntil next time...\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}