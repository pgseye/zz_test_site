{
  "hash": "15eb9da88e65fb53fb1c91608e126281",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"tidylog - Console Messaging in R\"\ndate: 2024-08-09\ncategories: [code]\nimage: \"R_small.jpeg\"\ndescription: \"Finally get some feedback about what your data manipulations are actually doing.\"\n---\n\n\nToday's post is really quite short (no thanks needed). It's really to point out a super-handy little package that you should load at the beginning of every one of your `R` scripts (but only useful if you're a `tidyverse` user).\n\nThe package is called `tidylog` and it's designed to provide immediate feedback about what the data manipulations you make with `dplyr` and `tidyr` functions (e.g. `filter`, `select`,`mutate`, `group_by`, the various `join` functions, etc) are actually doing to your datasets.\n\nTo my mind this should be built into `R`, as this kind of operational feedback is taken for granted by `Stata` users. But I guess that's the whole point of `R` being open-source and community-driven in terms of ad-hoc improvements in functionality.\n\nI don't think there's really much for me to add that the package author hasn't already said [here](https://github.com/elbersb/tidylog). So please have a look.\n\nBut to end I will show you a quick before and after. Let's use the inbuilt `nycflights13` dataset to illustrate what output is returned if you run a bunch of data-wrangling functions.\n\nWithout `tidylog`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(nycflights13)\nlibrary(tidyverse)\ndat <- flights |>  \n select(year:day, hour, origin, dest, tailnum, carrier) |> \n mutate(month = if_else(nchar(month) == 1, paste0(\"0\",month), as.character(month)),\n day = if_else(nchar(day) == 1, paste0(\"0\",day), as.character(day))) |>  \n unite(\"date\", year:day, sep = \"/\", remove = T) |> \n mutate(date = lubridate::ymd(date)) |> \n filter(hour >= 8) |> \n anti_join(planes, by = \"tailnum\") |> \n count(tailnum, sort = TRUE) \n```\n:::\n\n\nNada. Thanks for nothing `R`!\n\nWith `tidylog`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressMessages(library(tidylog))\ndat <- flights |>  \n select(year:day, hour, origin, dest, tailnum, carrier) |> \n mutate(month = if_else(nchar(month) == 1, paste0(\"0\",month), as.character(month)),\n day = if_else(nchar(day) == 1, paste0(\"0\",day), as.character(day))) |>  \n unite(\"date\", year:day, sep = \"/\", remove = T) |> \n mutate(date = lubridate::ymd(date)) |> \n filter(hour >= 8) |> \n anti_join(planes, by = \"tailnum\") |> \n count(tailnum, sort = TRUE) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nselect: dropped 11 variables (dep_time, sched_dep_time, dep_delay, arr_time, sched_arr_time, â€¦)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nmutate: converted 'month' from integer to character (0 new NA)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n        converted 'day' from integer to character (0 new NA)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nmutate: converted 'date' from character to Date (0 new NA)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nfilter: removed 50,726 rows (15%), 286,050 rows remaining\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nanti_join: added no columns\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n           > rows only in x    45,008\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n           > rows only in y  (     39)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n           > matched rows    (241,042)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n           >                 =========\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n           > rows total        45,008\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\ncount: now 716 rows and 2 columns, ungrouped\n```\n\n\n:::\n:::\n\n\nNice!\n\nTill next time - Happy analysing!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}