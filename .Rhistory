H <- H0$hazard * exp((1 * cox_mod$coefficients[1]) + (120 * cox_mod$coefficients[2])) # Cumulative hazard for 2nd covariate pattern of newdat (horTh = yes and tsize = 20)
S <- exp(- H) # Survival probability
data.frame(time = H0$time, Surv = S)
plot(H0$time, S) # plot survival for the 2nd covariate pattern
# Normally one doesn't worry about using basehaz - survfit does everything it does and more. Just can use to work from first principles if you want.
# Compare survival probabilities calcualated manually from basehaz with those estimated from survfit
1-H
library(survival)
library(tidyverse)
data(GBSG2, package = "TH.data")
fit <- survfit(Surv(time, cens) ~ horTh, data = GBSG2)
# Drawing curves
ggsurvplot(fit)
View(GBSG2)
# Create new data grid to predict on
newdat <- expand.grid(time = seq(0, 2500, by = 50),
cens = 1,
horTh = levels(GBSG2$horTh),
tsize = c(min(GBSG2$tsize), max(GBSG2$tsize)))
# Calculate predicted survival probabilities
preds <- predict(cox_mod, newdata = newdat, type = "survival", se.fit = TRUE)
#| message: false
#| warning: false
library(survival)
library(survminer)
library(tidyverse)
library(gtsummary)
library(kableExtra)
# Load data
data(GBSG2, package = "TH.data")
GBSG2 |>
select(time, cens, horTh, tsize) |>
head(10) |>
kable(align = "c", digits = 2)
# Kaplan-Meier fit
fit <- survfit(Surv(time, cens) ~ horTh, data = GBSG2)
# Plot KM fit
ggsurvplot(fit)
cox_mod <- coxph(Surv(time, cens) ~ horTh + tsize, data = GBSG2)
tbl_regression(cox_mod, exp = T)
# Create new data grid to predict on
newdat <- expand.grid(time = seq(0, 2500, by = 50),
cens = 1,
horTh = levels(GBSG2$horTh),
tsize = c(min(GBSG2$tsize), max(GBSG2$tsize)))
# Calculate predicted survival probabilities
preds <- predict(cox_mod, newdata = newdat, type = "survival", se.fit = TRUE)
newdat$prob_surv <- preds$fit
# If wanting to calculate 95% C.I.'s...
newdat$lcl_surv <- preds$fit - 1.96*preds$se.fit
newdat$ucl_surv <- preds$fit + 1.96*preds$se.fit
# View predictions
head(newdat, 10) |>
kable(align = "c", digits = 4)
preds
str(preds)
# Create new data grid to predict on
newdat <- expand.grid(time = seq(0, 2500, by = 50),
cens = 1,
horTh = levels(GBSG2$horTh),
tsize = c(min(GBSG2$tsize), max(GBSG2$tsize)))
# Calculate predicted survival probabilities
preds <- predict(cox_mod, newdata = newdat, type = "survival", se.fit = TRUE)
newdat$prob_surv <- preds$fit
# If wanting to calculate 95% C.I.'s...
newdat$lcl_surv <- preds$fit - 1.96*preds$se.fit
newdat$ucl_surv <- preds$fit + 1.96*preds$se.fit
# View predictions
head(newdat, 10) |>
kable(align = "c", digits = 4)
#| message: false
#| warning: false
library(survival)
library(survminer)
library(tidyverse)
library(gtsummary)
library(kableExtra)
# Load data
data(GBSG2, package = "TH.data")
GBSG2 |>
select(time, cens, horTh, tsize) |>
head(10) |>
kable(align = "c", digits = 2)
# Kaplan-Meier fit
fit <- survfit(Surv(time, cens) ~ horTh, data = GBSG2)
# Plot KM fit
ggsurvplot(fit)
cox_mod <- coxph(Surv(time, cens) ~ horTh + tsize, data = GBSG2)
tbl_regression(cox_mod, exp = T)
# Create new data grid to predict on
newdat <- expand.grid(time = seq(0, 2500, by = 50),
cens = 1,
horTh = levels(GBSG2$horTh),
tsize = c(min(GBSG2$tsize), max(GBSG2$tsize)))
# Calculate predicted survival probabilities
preds <- predict(cox_mod, newdata = newdat, type = "survival", se.fit = TRUE)
newdat$prob_surv <- preds$fit
# If wanting to calculate 95% C.I.'s...
newdat$lcl_surv <- preds$fit - 1.96*preds$se.fit
newdat$ucl_surv <- preds$fit + 1.96*preds$se.fit
# View predictions
head(newdat, 10) |>
kable(align = "c", digits = 4)
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line() +
facet_wrap(~ tsize) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
theme_bw(base_size = 20)
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(size = 1) +
facet_wrap(~ tsize) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size") +
theme_bw(base_size = 20)
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_wrap(~ tsize) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size") +
theme_bw(base_size = 20)
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_wrap(~ tsize) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20)
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_wrap(~ tsize) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20) + theme(legend.position="bottom")
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_wrap(~ tsize, labeller = labeller(tsize = c("3 mm", "120 mm"))) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20) + theme(legend.position="bottom")
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_grid(~ tsize, labeller = labeller(tsize = c("3 mm", "120 mm"))) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20) + theme(legend.position="bottom")
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_grid(~ tsize, labeller = as_labeller(tsize = c("3 mm", "120 mm"))) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20) + theme(legend.position="bottom")
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_grid(tsize ~., labeller = labeller(tsize = c("3 mm", "120 mm"))) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20) + theme(legend.position="bottom")
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_wrap(tsize ~., labeller = labeller(tsize = c("3 mm", "120 mm"))) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20) + theme(legend.position="bottom")
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_wrap(tsize ~, labeller = labeller(tsize = c("3 mm", "120 mm"))) +
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_wrap(tsize ~ ., labeller = labeller(tsize = c("3 mm", "120 mm"))) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20) + theme(legend.position="bottom")
tum_names <- as_labeller(
c(`3` = "Tumour Size = 3 mm", `120` = "Tumour Size = 120 mm"))
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_wrap(tsize ~ ., labeller = tum_names) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20) + theme(legend.position="bottom")
# Kaplan-Meier fit
fit <- survfit(Surv(time, cens) ~ horTh, data = GBSG2)
# Plot KM fit
ggsurvplot(fit, base_size = 20)
# Kaplan-Meier fit
fit <- survfit(Surv(time, cens) ~ horTh, data = GBSG2)
# Plot KM fit
ggsurvplot(fit) +
theme_survminer(base_size = 20)
# Kaplan-Meier fit
fit <- survfit(Surv(time, cens) ~ horTh, data = GBSG2)
# Plot KM fit
ggsurvplot(fit) %+% theme_survminer(base_size = 20)
# Kaplan-Meier fit
fit <- survfit(Surv(time, cens) ~ horTh, data = GBSG2)
# Plot KM fit
ggsurvplot(fit,
risk.table = TRUE,
submain = "Kaplan-Meier Survival Curves for Hormone Therapy Use") +
theme_survminer(
font.main = c(16, "bold", "darkblue"),
font.submain = c(15, "bold.italic", "purple"),
font.caption = c(14, "plain", "orange"),
font.x = c(14, "bold.italic", "red"),
font.y = c(14, "bold.italic", "darkred"),
font.tickslab = c(12, "plain", "darkgreen")
)
# Kaplan-Meier fit
fit <- survfit(Surv(time, cens) ~ horTh, data = GBSG2)
# Plot KM fit
ggsurvplot(fit,
risk.table = TRUE,
submain = "Kaplan-Meier Survival Curves for Hormone Therapy Use") +
theme_survminer(
font.submain = 20,
font.x = 14,
font.y = 14,
font.tickslab = 12)
# Kaplan-Meier fit
fit <- survfit(Surv(time, cens) ~ horTh, data = GBSG2)
# Plot KM fit
ggsurvplot(fit,
risk.table = TRUE,
submain = "Kaplan-Meier Survival Curves for Hormone Therapy Use") +
theme_survminer(
font.submain = 20,
font.x = 14,
font.y = 14,
font.legend = 14,
font.tickslab = 12)
summary(GBSG2$tsize)
#| message: false
#| warning: false
library(survival)
library(survminer)
library(tidyverse)
library(gtsummary)
library(kableExtra)
# Load data
data(GBSG2, package = "TH.data")
GBSG2 |>
select(time, cens, horTh, tsize) |>
head(10) |>
kable(align = "c", digits = 2)
# Kaplan-Meier fit
fit <- survfit(Surv(time, cens) ~ horTh, data = GBSG2)
# Plot KM fit
ggsurvplot(fit,
risk.table = TRUE,
submain = "Kaplan-Meier Survival Curves for Hormone Therapy Use") +
theme_survminer(
font.submain = 22,
font.x = 18,
font.y = 18,
font.legend = 16,
font.tickslab = 14)
cox_mod <- coxph(Surv(time, cens) ~ horTh + tsize, data = GBSG2)
tbl_regression(cox_mod, exp = T)
# Create new data grid to predict on
newdat <- expand.grid(time = seq(0, 2500, by = 50),
cens = 1,
horTh = levels(GBSG2$horTh),
tsize = c(min(GBSG2$tsize), max(GBSG2$tsize)))
# Calculate predicted survival probabilities
preds <- predict(cox_mod, newdata = newdat, type = "survival", se.fit = TRUE)
newdat$prob_surv <- preds$fit
# If wanting to calculate 95% C.I.'s...
newdat$lcl_surv <- preds$fit - 1.96*preds$se.fit
newdat$ucl_surv <- preds$fit + 1.96*preds$se.fit
# View predictions
head(newdat, 10) |>
kable(align = "c", digits = 4)
tum_names <- as_labeller(
c(`3` = "Tumour Size = 3 mm", `120` = "Tumour Size = 120 mm"))
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_wrap(tsize ~ ., labeller = tum_names) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20) + theme(legend.position="bottom")
# Estimate the cumulative baseline hazard function
H0 <- basehaz(cox_mod, centered = F)
# Calculate cumulative hazard function for covariate combo 1.
H1 <- H0$hazard * exp((0 * cox_mod$coefficients[1]) + (3 * cox_mod$coefficients[2]))
# Calculate cumulative hazard function for covariate combo 2.
H2 <- H0$hazard * exp((1 * cox_mod$coefficients[1]) + (3 * cox_mod$coefficients[2]))
# Calculate cumulative hazard function for covariate combo 3.
H3 <- H0$hazard * exp((0 * cox_mod$coefficients[1]) + (120 * cox_mod$coefficients[2]))
# Calculate cumulative hazard function for covariate combo 4.
H4 <- H0$hazard * exp((1 * cox_mod$coefficients[1]) + (120 * cox_mod$coefficients[2]))
S <- exp(- H) # Survival probability
H1
# Estimate the cumulative baseline hazard function
H0 <- basehaz(cox_mod, centered = F)
# Calculate cumulative hazard function for covariate combo 1.
H1 <- H0$hazard * exp((0 * cox_mod$coefficients[1]) + (3 * cox_mod$coefficients[2]))
# Calculate cumulative hazard function for covariate combo 2.
H2 <- H0$hazard * exp((1 * cox_mod$coefficients[1]) + (3 * cox_mod$coefficients[2]))
# Calculate cumulative hazard function for covariate combo 3.
H3 <- H0$hazard * exp((0 * cox_mod$coefficients[1]) + (120 * cox_mod$coefficients[2]))
# Calculate cumulative hazard function for covariate combo 4.
H4 <- H0$hazard * exp((1 * cox_mod$coefficients[1]) + (120 * cox_mod$coefficients[2]))
# Calculate survival function for covariate combo 1.
S1 <- exp(-H1)
# Calculate survival function for covariate combo 2.
S2 <- exp(-H2)
# Calculate survival function for covariate combo 3.
S3 <- exp(-H3)
# Calculate survival function for covariate combo 4.
S4 <- exp(-H4)
surv_df <-  rbind(data.frame(combo = 1, time = H0$time, Surv = S1),
data.frame(combo = 2, time = H0$time, Surv = S2),
data.frame(combo = 3, time = H0$time, Surv = S3),
data.frame(combo = 4, time = H0$time, Surv = S4))
View(surv_df)
#| message: false
#| warning: false
library(survival)
library(survminer)
library(tidyverse)
library(gtsummary)
library(kableExtra)
# Load data
data(GBSG2, package = "TH.data")
GBSG2 |>
select(time, cens, horTh, tsize) |>
head(10) |>
kable(align = "c", digits = 2)
# Kaplan-Meier fit
fit <- survfit(Surv(time, cens) ~ horTh, data = GBSG2)
# Plot KM fit
ggsurvplot(fit,
risk.table = TRUE,
submain = "Kaplan-Meier Survival Curves for Hormone Therapy Use") +
theme_survminer(
font.submain = 22,
font.x = 18,
font.y = 18,
font.legend = 16,
font.tickslab = 14)
cox_mod <- coxph(Surv(time, cens) ~ horTh + tsize, data = GBSG2)
tbl_regression(cox_mod, exp = T)
# Create new data grid to predict on
newdat <- expand.grid(time = seq(0, 2500, by = 50),
cens = 1,
horTh = levels(GBSG2$horTh),
tsize = c(min(GBSG2$tsize), max(GBSG2$tsize)))
# Calculate predicted survival probabilities
preds <- predict(cox_mod, newdata = newdat, type = "survival", se.fit = TRUE)
newdat$prob_surv <- preds$fit
# If wanting to calculate 95% C.I.'s...
newdat$lcl_surv <- preds$fit - 1.96*preds$se.fit
newdat$ucl_surv <- preds$fit + 1.96*preds$se.fit
# View predictions
head(newdat, 10) |>
kable(align = "c", digits = 4)
tum_names <- as_labeller(
c(`3` = "Tumour Size = 3 mm", `120` = "Tumour Size = 120 mm"))
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_wrap(tsize ~ ., labeller = tum_names) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20) + theme(legend.position="bottom")
cox_mod <- coxph(Surv(time, cens) ~ horTh + tsize, data = GBSG2)
tbl_regression(cox_mod, exp = T)
surv_df <-  rbind(data.frame(combo = 1, time = H0$time, prob_surv = S1),
data.frame(combo = 2, time = H0$time, prob_surv = S2),
data.frame(combo = 3, time = H0$time, prob_surv = S3),
data.frame(combo = 4, time = H0$time, prob_surv = S4))
surv_df <-  rbind(data.frame(combo = 1, time = H0$time, prob_surv = S1, horTh = 0, tsize = 3),
data.frame(combo = 2, time = H0$time, prob_surv = S2, horTh = 1, tsize = 3),
data.frame(combo = 3, time = H0$time, prob_surv = S3, horTh = 0, tsize = 120),
data.frame(combo = 4, time = H0$time, prob_surv = S4, horTh = 1, tsize = 120))
tum_names <- as_labeller(
c(`3` = "Tumour Size = 3 mm", `120` = "Tumour Size = 120 mm"))
ggplot(surv_df, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_wrap(tsize ~ ., labeller = tum_names) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20) + theme(legend.position = "bottom")
ggplot(surv_df, aes(x = time, y = prob_surv, color = factor(horTh))) +
geom_line(linewidth = 1) +
facet_wrap(tsize ~ ., labeller = tum_names) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20) + theme(legend.position = "bottom")
min(GBSG2$tsize)
levels(GBSG2$horTh)
str(GBSG2$horTh)
View(surv_df)
View(GBSG2)
View(newdat)
#| message: false
#| warning: false
library(survival)
library(survminer)
library(tidyverse)
library(gtsummary)
library(kableExtra)
# Load data
data(GBSG2, package = "TH.data")
GBSG2 |>
select(time, cens, horTh, tsize) |>
head(10) |>
kable(align = "c", digits = 2)
# Kaplan-Meier fit
fit <- survfit(Surv(time, cens) ~ horTh, data = GBSG2)
# Plot KM fit
ggsurvplot(fit,
risk.table = TRUE,
submain = "Kaplan-Meier Survival Curves for Hormone Therapy Use") +
theme_survminer(
font.submain = 22,
font.x = 18,
font.y = 18,
font.legend = 16,
font.tickslab = 14)
cox_mod <- coxph(Surv(time, cens) ~ horTh + tsize, data = GBSG2)
tbl_regression(cox_mod, exp = T)
# Create new data grid to predict on
newdat <- expand.grid(time = seq(0, 2500, by = 50),
cens = 1,
horTh = levels(GBSG2$horTh),
tsize = c(min(GBSG2$tsize), max(GBSG2$tsize)))
# Calculate predicted survival probabilities
preds <- predict(cox_mod, newdata = newdat, type = "survival", se.fit = TRUE)
newdat$prob_surv <- preds$fit
# If wanting to calculate 95% C.I.'s...
newdat$lcl_surv <- preds$fit - 1.96*preds$se.fit
newdat$ucl_surv <- preds$fit + 1.96*preds$se.fit
# View predictions
head(newdat, 10) |>
kable(align = "c", digits = 4)
tum_names <- as_labeller(
c(`3` = "Tumour Size = 3 mm", `120` = "Tumour Size = 120 mm"))
ggplot(newdat, aes(x = time, y = prob_surv, color = horTh)) +
geom_line(linewidth = 1) +
facet_wrap(tsize ~ ., labeller = tum_names) +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.1)) +
labs(x = "Recurrence-Free Survival (Days)",
y = "Predicted Probability of Survival",
title = "Probability of Survival as a Function of Hormone Therapy and Tumour Size",
color = "Hormone Therapy") +
theme_bw(base_size = 20) + theme(legend.position = "bottom")
# Estimate the cumulative baseline hazard function
H0 <- basehaz(cox_mod, centered = F)
# Calculate cumulative hazard function for covariate combo 1.
H1 <- H0$hazard * exp((0 * cox_mod$coefficients[1]) + (3 * cox_mod$coefficients[2]))
# Calculate cumulative hazard function for covariate combo 2.
H2 <- H0$hazard * exp((1 * cox_mod$coefficients[1]) + (3 * cox_mod$coefficients[2]))
# Calculate cumulative hazard function for covariate combo 3.
H3 <- H0$hazard * exp((0 * cox_mod$coefficients[1]) + (120 * cox_mod$coefficients[2]))
# Calculate cumulative hazard function for covariate combo 4.
H4 <- H0$hazard * exp((1 * cox_mod$coefficients[1]) + (120 * cox_mod$coefficients[2]))
# Calculate survival function for covariate combo 1.
S1 <- exp(-H1)
# Calculate survival function for covariate combo 2.
S2 <- exp(-H2)
# Calculate survival function for covariate combo 3.
S3 <- exp(-H3)
# Calculate survival function for covariate combo 4.
S4 <- exp(-H4)
# Create dataframe of predicted survival probabilities as a function of covariate combos
surv_df <-  rbind(data.frame(combo = 1, time = H0$time, prob_surv = S1, horTh = 0, tsize = 3),
data.frame(combo = 2, time = H0$time, prob_surv = S2, horTh = 1, tsize = 3),
data.frame(combo = 3, time = H0$time, prob_surv = S3, horTh = 0, tsize = 120),
data.frame(combo = 4, time = H0$time, prob_surv = S4, horTh = 1, tsize = 120))
View(surv_df)
