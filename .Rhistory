geom_segment(aes(x = 0, y = 5, xend = 5, yend = 5), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
theme_bw(base_size = 20)
p2 <- ggplot(df, aes(x, y = log(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 3.46, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
theme_bw(base_size = 20)
p3 <- ggplot(df, aes(x, y = log10(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
theme_bw(base_size = 20)
cowplot::plot_grid(p1, p2, p3, labels = c('Base(2) log', 'Natural log', 'Base(10) log'), hjust = c(-0.9,-0.7,-0.6), vjust = 4, ncol = 3, label_size = 20)
log10(32)
# Here I have performed the log-transformation of Y on-the-fly, within the ggplot call, but you can also do this by explicitly creating a new log-transformed variable in the dataset
p1 <- ggplot(df, aes(x, y = log2(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 5), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 5, xend = 5, yend = 5), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
theme_bw(base_size = 20)
p2 <- ggplot(df, aes(x, y = log(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 3.46, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
theme_bw(base_size = 20)
p3 <- ggplot(df, aes(x, y = log10(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 1.51), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 1.51, xend = 5, yend = 1.51), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
theme_bw(base_size = 20)
cowplot::plot_grid(p1, p2, p3, labels = c('Base(2) log', 'Natural log', 'Base(10) log'), hjust = c(-0.9,-0.7,-0.6), vjust = 4, ncol = 3, label_size = 20)
# Here I have performed the log-transformation of Y on-the-fly, within the ggplot call, but you can also do this by explicitly creating a new log-transformed variable in the dataset
p1 <- ggplot(df, aes(x, y = log2(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 5), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 5, xend = 5, yend = 5), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(0, 10), breaks = c(0,2,4,6,8,10)) +
theme_bw(base_size = 20)
p2 <- ggplot(df, aes(x, y = log(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 3.46, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(0, 10), breaks = c(0,2,3.46,4,6)) +
theme_bw(base_size = 20)
p3 <- ggplot(df, aes(x, y = log10(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 1.51), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 1.51, xend = 5, yend = 1.51), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(0, 10), breaks = c(0,1,1.51,2,3)) +
theme_bw(base_size = 20)
cowplot::plot_grid(p1, p2, p3, labels = c('Base(2) log', 'Natural log', 'Base(10) log'), hjust = c(-0.9,-0.7,-0.6), vjust = 4, ncol = 3, label_size = 20)
# Here I have performed the log-transformation of Y on-the-fly, within the ggplot call, but you can also do this by explicitly creating a new log-transformed variable in the dataset
p1 <- ggplot(df, aes(x, y = log2(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 5), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 5, xend = 5, yend = 5), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(0, 10), breaks = c(0,2,4,6,8,10)) +
theme_bw(base_size = 20)
p2 <- ggplot(df, aes(x, y = log(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 3.46, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
theme_bw(base_size = 20)
p3 <- ggplot(df, aes(x, y = log10(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 1.51), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 1.51, xend = 5, yend = 1.51), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
theme_bw(base_size = 20)
cowplot::plot_grid(p1, p2, p3, labels = c('Base(2) log', 'Natural log', 'Base(10) log'), hjust = c(-0.9,-0.7,-0.6), vjust = 4, ncol = 3, label_size = 20)
# Here I have performed the log-transformation of Y on-the-fly, within the ggplot call, but you can also do this by explicitly creating a new log-transformed variable in the dataset
p1 <- ggplot(df, aes(x, y = log2(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 5), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 5, xend = 5, yend = 5), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(0, 10), breaks = c(0,2,4,6,8,10)) +
annotate(geom = "text", x = 1, y = 6, label = "5.00", color="red") +
theme_bw(base_size = 20)
p2 <- ggplot(df, aes(x, y = log(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 3.46, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
theme_bw(base_size = 20)
p3 <- ggplot(df, aes(x, y = log10(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 1.51), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 1.51, xend = 5, yend = 1.51), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
theme_bw(base_size = 20)
cowplot::plot_grid(p1, p2, p3, labels = c('Base(2) log', 'Natural log', 'Base(10) log'), hjust = c(-0.9,-0.7,-0.6), vjust = 4, ncol = 3, label_size = 20)
# Here I have performed the log-transformation of Y on-the-fly, within the ggplot call, but you can also do this by explicitly creating a new log-transformed variable in the dataset
p1 <- ggplot(df, aes(x, y = log2(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 5), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 5, xend = 5, yend = 5), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(0, 10), breaks = c(0,2,4,6,8,10)) +
annotate(geom = "text", x = 1, y = 5.5, label = "5.00", color="red", size = 5) +
theme_bw(base_size = 20)
p2 <- ggplot(df, aes(x, y = log(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 3.46, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
annotate(geom = "text", x = 1, y = 4, label = "3.46", color="red") +
theme_bw(base_size = 20)
p3 <- ggplot(df, aes(x, y = log10(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 1.51), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 1.51, xend = 5, yend = 1.51), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
annotate(geom = "text", x = 1, y = 1.7, label = "1.51", color="red") +
theme_bw(base_size = 20)
cowplot::plot_grid(p1, p2, p3, labels = c('Base(2) log', 'Natural log', 'Base(10) log'), hjust = c(-0.9,-0.7,-0.6), vjust = 4, ncol = 3, label_size = 20)
3.46+.6
3.46+.09
exp(3.46)
10^1.51
summary(lm(df$y ~ df$x, data = df))
mean(df$y)
#| message: false
library(tidyverse)
library(kableExtra)
library(gtsummary)
x <- c(0:10)
y <- 2^(0:10)
y2 <- c(paste0("1 = 2\U2070"),
paste0("2 = 2\U00B9"),
paste0("2x2 = 2\U00B2"),
paste0("2x2x2 = 2\U00B3"),
paste0("2x2x2x2 = 2\U2074"),
paste0("2x2x2x2x2 = 2\U2075"),
paste0("2x2x2x2x2x2 = 2\U2076"),
paste0("2x2x2x2x2x2x2 = 2\U2077"),
paste0("2x2x2x2x2x2x2x2 = 2\U2078"),
paste0("2x2x2x2x2x2x2x2x2 = 2\U2079"),
paste0("2x2x2x2x2x2x2x2x2x2 = 2\U00B9\U2070"))
df <- data.frame(cbind(x = x, y = y, `y_in_exponential_form` = y2))
df$x <- as.numeric(df$x); df$y <- as.numeric(df$y)
df |>
kable(align = "c", digits = 2)
#| code-fold: false
median(df$y)
#| code-fold: false
mean(df$y)
# nth root method - manual
(1*2*4*8*16*32*64*128*256*512*1024)^(1/11)
# logs method - manual
exp((log(1)+log(2)+log(4)+log(8)+log(16)+log(32)+log(64)+log(128)+log(256)+log(512)+log(1024))/11)
# logs method - quick and easy
exp(mean(log(df$y)))
ggplot(df, aes(x, y)) +
geom_line(linewidth = 1, colour = "deepskyblue") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(1, 1050), breaks = c(1,100,200,300,400,500,600,700,800,900,1000)) +
theme_bw(base_size = 30)
ggplot(df, aes(x, y)) +
geom_line(linewidth = 1, colour = "deepskyblue") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(1, 1050), breaks = c(1,2,4,8,16,32,64,128,256,512,1024)) +
geom_segment(aes(x = 0, y = 64, xend = 6, yend = 64), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 6, y = 1, xend = 6, yend = 64), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 128, xend = 7, yend = 128), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 7, y = 1, xend = 7, yend = 128), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_rect(aes(xmin = 0, xmax = 7, ymin = 64, ymax = 128), fill = "red", alpha = 0.02) +
geom_rect(aes(xmin = 6, xmax = 7, ymin = 1, ymax = 64), fill = "red", alpha = 0.02) +
geom_segment(aes(x = 0, y = 256, xend = 8, yend = 256), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 8, y = 1, xend = 8, yend = 256), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 512, xend = 9, yend = 512), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 9, y = 1, xend = 9, yend = 512), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_rect(aes(xmin = 0, xmax = 9, ymin = 256, ymax = 512), fill = "red", alpha = 0.02) +
geom_rect(aes(xmin = 8, xmax = 9, ymin = 1, ymax = 256), fill = "red", alpha = 0.02) +
theme_bw(base_size = 30)
#| message: false
library(scales)
ggplot(df, aes(x, y)) +
geom_line(linewidth = 1, colour = "deepskyblue") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(trans = "log2", breaks = c(1,2,4,8,16,32,64,128,256,512,1024)) +
geom_segment(aes(x = 0, y = 64, xend = 6, yend = 64), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 6, y = 1, xend = 6, yend = 64), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 128, xend = 7, yend = 128), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 7, y = 1, xend = 7, yend = 128), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_rect(aes(xmin = 0, xmax = 7, ymin = 64, ymax = 128), fill = "red", alpha = 0.02) +
geom_rect(aes(xmin = 6, xmax = 7, ymin = 1, ymax = 64), fill = "red", alpha = 0.02) +
geom_segment(aes(x = 0, y = 256, xend = 8, yend = 256), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 8, y = 1, xend = 8, yend = 256), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 512, xend = 9, yend = 512), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 9, y = 1, xend = 9, yend = 512), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_rect(aes(xmin = 0, xmax = 9, ymin = 256, ymax = 512), fill = "red", alpha = 0.02) +
geom_rect(aes(xmin = 8, xmax = 9, ymin = 1, ymax = 256), fill = "red", alpha = 0.02) +
theme_bw(base_size = 30)
ggplot(df, aes(x, y)) +
geom_line(linewidth = 1, colour = "deepskyblue") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(trans = log2_trans(),
breaks = c(1,2,4,8,16,32,64,128,256,512,1024),
labels = trans_format("log2", math_format(2^.x))) +
geom_segment(aes(x = 0, y = 64, xend = 6, yend = 64), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 6, y = 1, xend = 6, yend = 64), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 128, xend = 7, yend = 128), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 7, y = 1, xend = 7, yend = 128), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_rect(aes(xmin = 0, xmax = 7, ymin = 64, ymax = 128), fill = "red", alpha = 0.02) +
geom_rect(aes(xmin = 6, xmax = 7, ymin = 1, ymax = 64), fill = "red", alpha = 0.02) +
geom_segment(aes(x = 0, y = 256, xend = 8, yend = 256), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 8, y = 1, xend = 8, yend = 256), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 512, xend = 9, yend = 512), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 9, y = 1, xend = 9, yend = 512), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_rect(aes(xmin = 0, xmax = 9, ymin = 256, ymax = 512), fill = "red", alpha = 0.02) +
geom_rect(aes(xmin = 8, xmax = 9, ymin = 1, ymax = 256), fill = "red", alpha = 0.02) +
theme_bw(base_size = 30)
# Here I have performed the log-transformation of Y on-the-fly, within the ggplot call, but you can also do this by explicitly creating a new log-transformed variable in the dataset
p1 <- ggplot(df, aes(x, y = log2(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 5), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 5, xend = 5, yend = 5), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(0, 10), breaks = c(0,2,4,6,8,10)) +
annotate(geom = "text", x = 0.8, y = 5.26, label = "5.00", color="red", size = 8) +
theme_bw(base_size = 20)
p2 <- ggplot(df, aes(x, y = log(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 3.46, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
annotate(geom = "text", x = 0.8, y = 3.65, label = "3.46", color="red", size = 8) +
theme_bw(base_size = 20)
p3 <- ggplot(df, aes(x, y = log10(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 1.51), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 1.51, xend = 5, yend = 1.51), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
annotate(geom = "text", x = 0.8, y = 1.6, label = "1.51", color="red", size = 8) +
theme_bw(base_size = 20)
cowplot::plot_grid(p1, p2, p3, labels = c('Base(2) log', 'Natural log', 'Base(10) log'), hjust = c(-0.9,-0.7,-0.6), vjust = 4, ncol = 3, label_size = 20)
lm(y ~ x, data = df) |>
tbl_regression()
lm(y ~ x, data = df) |>
tbl_regression(intercept = T)
ggplot(df, aes(x, y)) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_smooth(method = "lm")+
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(1, 1050), breaks = c(1,100,200,300,400,500,600,700,800,900,1000)) +
theme_bw(base_size = 30)
ggplot(df, aes(x, y)) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_smooth(method = "lm", se = F) +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(1, 1050), breaks = c(1,100,200,300,400,500,600,700,800,900,1000)) +
theme_bw(base_size = 30)
ggplot(df, aes(x, y)) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_smooth(method = "lm", se = F, colour = "black") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(1, 1050), breaks = c(1,100,200,300,400,500,600,700,800,900,1000)) +
theme_bw(base_size = 30)
#| message: false
library(tidyverse)
library(kableExtra)
library(gtsummary)
library(emmeans)
x <- c(0:10)
y <- 2^(0:10)
y2 <- c(paste0("1 = 2\U2070"),
paste0("2 = 2\U00B9"),
paste0("2x2 = 2\U00B2"),
paste0("2x2x2 = 2\U00B3"),
paste0("2x2x2x2 = 2\U2074"),
paste0("2x2x2x2x2 = 2\U2075"),
paste0("2x2x2x2x2x2 = 2\U2076"),
paste0("2x2x2x2x2x2x2 = 2\U2077"),
paste0("2x2x2x2x2x2x2x2 = 2\U2078"),
paste0("2x2x2x2x2x2x2x2x2 = 2\U2079"),
paste0("2x2x2x2x2x2x2x2x2x2 = 2\U00B9\U2070"))
df <- data.frame(cbind(x = x, y = y, `y_in_exponential_form` = y2))
df$x <- as.numeric(df$x); df$y <- as.numeric(df$y)
df |>
kable(align = "c", digits = 2)
#| code-fold: false
median(df$y)
#| code-fold: false
mean(df$y)
# nth root method - manual
(1*2*4*8*16*32*64*128*256*512*1024)^(1/11)
# logs method - manual
exp((log(1)+log(2)+log(4)+log(8)+log(16)+log(32)+log(64)+log(128)+log(256)+log(512)+log(1024))/11)
# logs method - quick and easy
exp(mean(log(df$y)))
ggplot(df, aes(x, y)) +
geom_line(linewidth = 1, colour = "deepskyblue") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(1, 1050), breaks = c(1,100,200,300,400,500,600,700,800,900,1000)) +
theme_bw(base_size = 30)
ggplot(df, aes(x, y)) +
geom_line(linewidth = 1, colour = "deepskyblue") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(1, 1050), breaks = c(1,2,4,8,16,32,64,128,256,512,1024)) +
geom_segment(aes(x = 0, y = 64, xend = 6, yend = 64), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 6, y = 1, xend = 6, yend = 64), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 128, xend = 7, yend = 128), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 7, y = 1, xend = 7, yend = 128), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_rect(aes(xmin = 0, xmax = 7, ymin = 64, ymax = 128), fill = "red", alpha = 0.02) +
geom_rect(aes(xmin = 6, xmax = 7, ymin = 1, ymax = 64), fill = "red", alpha = 0.02) +
geom_segment(aes(x = 0, y = 256, xend = 8, yend = 256), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 8, y = 1, xend = 8, yend = 256), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 512, xend = 9, yend = 512), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 9, y = 1, xend = 9, yend = 512), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_rect(aes(xmin = 0, xmax = 9, ymin = 256, ymax = 512), fill = "red", alpha = 0.02) +
geom_rect(aes(xmin = 8, xmax = 9, ymin = 1, ymax = 256), fill = "red", alpha = 0.02) +
theme_bw(base_size = 30)
#| message: false
library(scales)
ggplot(df, aes(x, y)) +
geom_line(linewidth = 1, colour = "deepskyblue") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(trans = "log2", breaks = c(1,2,4,8,16,32,64,128,256,512,1024)) +
geom_segment(aes(x = 0, y = 64, xend = 6, yend = 64), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 6, y = 1, xend = 6, yend = 64), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 128, xend = 7, yend = 128), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 7, y = 1, xend = 7, yend = 128), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_rect(aes(xmin = 0, xmax = 7, ymin = 64, ymax = 128), fill = "red", alpha = 0.02) +
geom_rect(aes(xmin = 6, xmax = 7, ymin = 1, ymax = 64), fill = "red", alpha = 0.02) +
geom_segment(aes(x = 0, y = 256, xend = 8, yend = 256), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 8, y = 1, xend = 8, yend = 256), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 512, xend = 9, yend = 512), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 9, y = 1, xend = 9, yend = 512), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_rect(aes(xmin = 0, xmax = 9, ymin = 256, ymax = 512), fill = "red", alpha = 0.02) +
geom_rect(aes(xmin = 8, xmax = 9, ymin = 1, ymax = 256), fill = "red", alpha = 0.02) +
theme_bw(base_size = 30)
ggplot(df, aes(x, y)) +
geom_line(linewidth = 1, colour = "deepskyblue") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(trans = log2_trans(),
breaks = c(1,2,4,8,16,32,64,128,256,512,1024),
labels = trans_format("log2", math_format(2^.x))) +
geom_segment(aes(x = 0, y = 64, xend = 6, yend = 64), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 6, y = 1, xend = 6, yend = 64), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 128, xend = 7, yend = 128), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 7, y = 1, xend = 7, yend = 128), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_rect(aes(xmin = 0, xmax = 7, ymin = 64, ymax = 128), fill = "red", alpha = 0.02) +
geom_rect(aes(xmin = 6, xmax = 7, ymin = 1, ymax = 64), fill = "red", alpha = 0.02) +
geom_segment(aes(x = 0, y = 256, xend = 8, yend = 256), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 8, y = 1, xend = 8, yend = 256), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 512, xend = 9, yend = 512), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 9, y = 1, xend = 9, yend = 512), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_rect(aes(xmin = 0, xmax = 9, ymin = 256, ymax = 512), fill = "red", alpha = 0.02) +
geom_rect(aes(xmin = 8, xmax = 9, ymin = 1, ymax = 256), fill = "red", alpha = 0.02) +
theme_bw(base_size = 30)
# Here I have performed the log-transformation of Y on-the-fly, within the ggplot call, but you can also do this by explicitly creating a new log-transformed variable in the dataset
p1 <- ggplot(df, aes(x, y = log2(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 5), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 5, xend = 5, yend = 5), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(0, 10), breaks = c(0,2,4,6,8,10)) +
annotate(geom = "text", x = 0.8, y = 5.26, label = "5.00", color="red", size = 8) +
theme_bw(base_size = 20)
p2 <- ggplot(df, aes(x, y = log(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 3.46, xend = 5, yend = 3.46), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
annotate(geom = "text", x = 0.8, y = 3.65, label = "3.46", color="red", size = 8) +
theme_bw(base_size = 20)
p3 <- ggplot(df, aes(x, y = log10(y))) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_segment(aes(x = 5, y = 0, xend = 5, yend = 1.51), linewidth = 0.5, color = "red", linetype = "dashed") +
geom_segment(aes(x = 0, y = 1.51, xend = 5, yend = 1.51), linewidth = 0.5, color = "red", linetype = "dashed") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
annotate(geom = "text", x = 0.8, y = 1.6, label = "1.51", color="red", size = 8) +
theme_bw(base_size = 20)
cowplot::plot_grid(p1, p2, p3, labels = c('Base(2) log', 'Natural log', 'Base(10) log'), hjust = c(-0.9,-0.7,-0.6), vjust = 4, ncol = 3, label_size = 20)
#| warning: false
mod_linear <- lm(y ~ x, data = df) |>
tbl_regression(intercept = T)
ggplot(df, aes(x, y)) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_smooth(method = "lm", se = F, colour = "black") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(1, 1050), breaks = c(1,100,200,300,400,500,600,700,800,900,1000)) +
theme_bw(base_size = 30)
emmeans(mod_linear, ~ X, at(list(X = 5)))
#| warning: false
mod_linear <- lm(y ~ x, data = df)
mod_linear |>
tbl_regression(intercept = T)
ggplot(df, aes(x, y)) +
geom_line(linewidth = 1, colour = "deepskyblue") +
geom_smooth(method = "lm", se = F, colour = "black") +
scale_x_continuous(limits = c(0, 10), breaks = seq(0, 10, by = 1)) +
scale_y_continuous(limits = c(1, 1050), breaks = c(1,100,200,300,400,500,600,700,800,900,1000)) +
theme_bw(base_size = 30)
emmeans(mod_linear, ~ X, at(list(X = 5)))
emmeans(mod_linear, ~ X, at = (list(X = 5)))
emmeans(mod_linear, ~ x, at = (list(x = 5)))
emmeans(mod_linear, ~ x, at = (list(x = 5))) |>
tbl_summary()
emmeans(mod_linear, ~ x, at = (list(x = 5))) |>
kable()
emmeans(mod_linear, ~ x, at = (list(x = 5))) |>
kable(align = "c", digits = 2)
mod_trans <- lm(log2(y) ~ x, data = df)
mod_trans |>
tbl_regression(intercept = T, exponentiate = T)
mod_trans <- lm(log2(y) ~ x, data = df)
mod_trans |>
tbl_regression(intercept = T)
mod_trans <- lm(log(y) ~ x, data = df)
mod_trans |>
tbl_regression(intercept = T)
mod_trans <- lm(log(y) ~ x, data = df)
mod_trans |>
tbl_regression(intercept = T, exponentiate = T)
mod_trans <- lm(log(y) ~ x, data = df)
mod_trans |>
tbl_regression(intercept = T, exponentiate = T)
mod_trans <- lm(log(y) ~ x, data = df)
# mod_trans |>
#   tbl_regression(intercept = T, exponentiate = T)
tbl <- mod_trans |>
tbl_regression()
tbl |>
# remove character version of 95% CI
modify_column_hide(ci) |>
# exponentiate the regression estimates
modify_table_body(
\(x) x |> mutate(across(c(estimate, conf.low, conf.high), exp))
) |>
# merge numeric LB and UB together to display in table
modify_column_merge(pattern = "{conf.low}, {conf.high}", rows = !is.na(estimate)) |>
modify_header(conf.low = "**95% CI**") |>
as_kable() # convert to kable to display on stackoverflow
#| warning: false
mod_trans <- lm(log2(y) ~ x, data = df)
tbl <- mod_trans |>
tbl_regression() # need work around for log transformed response for tbl_regression
tbl |>
# remove character version of 95% CI
modify_column_hide(ci) |>
# exponentiate the regression estimates
modify_table_body(
\(x) x |> mutate(across(c(estimate, conf.low, conf.high), exp))
) |>
# merge numeric LB and UB together to display in table
modify_column_merge(pattern = "{conf.low}, {conf.high}", rows = !is.na(estimate)) |>
modify_header(conf.low = "**95% CI**") |>
as_kable() # convert to kable to display on stackoverflow
#| warning: false
mod_trans <- lm(log(y) ~ x, data = df)
tbl <- mod_trans |>
tbl_regression() # need work around for log transformed response for tbl_regression
tbl |>
# remove character version of 95% CI
modify_column_hide(ci) |>
# exponentiate the regression estimates
modify_table_body(
\(x) x |> mutate(across(c(estimate, conf.low, conf.high), exp))
) |>
# merge numeric LB and UB together to display in table
modify_column_merge(pattern = "{conf.low}, {conf.high}", rows = !is.na(estimate)) |>
modify_header(conf.low = "**95% CI**") |>
as_kable()
emmeans(mod_linear, ~ x, at = (list(x = 5)), type = "response") |>
kable(align = "c", digits = 2)
emmeans(mod_trans, ~ x, at = (list(x = 5)), type = "response") |>
kable(align = "c", digits = 2)
#| warning: false
mod_trans <- lm(log2(y) ~ x, data = df)
tbl <- mod_trans |>
tbl_regression() # need work around for log transformed response for tbl_regression
tbl |>
# remove character version of 95% CI
modify_column_hide(ci) |>
# exponentiate the regression estimates
modify_table_body(
\(x) x |> mutate(across(c(estimate, conf.low, conf.high), exp))
) |>
# merge numeric LB and UB together to display in table
modify_column_merge(pattern = "{conf.low}, {conf.high}", rows = !is.na(estimate)) |>
modify_header(conf.low = "**95% CI**") |>
as_kable()
emmeans(mod_trans, ~ x, at = (list(x = 5)), type = "response") |>
kable(align = "c", digits = 2)
#| warning: false
mod_trans <- lm(log10(y) ~ x, data = df)
tbl <- mod_trans |>
tbl_regression() # need work around for log transformed response for tbl_regression
tbl |>
# remove character version of 95% CI
modify_column_hide(ci) |>
# exponentiate the regression estimates
modify_table_body(
\(x) x |> mutate(across(c(estimate, conf.low, conf.high), exp))
) |>
# merge numeric LB and UB together to display in table
modify_column_merge(pattern = "{conf.low}, {conf.high}", rows = !is.na(estimate)) |>
modify_header(conf.low = "**95% CI**") |>
as_kable()
emmeans(mod_trans, ~ x, at = (list(x = 5)), type = "response") |>
kable(align = "c", digits = 2)
