freq.na(nhanes2)
md.pattern(nhanes2)
nhanes2
mice_dat <-  mice(temp, m = 3)
mice_dat
stripplot(imp, col = c("red", "blue"), pch = c(1, 20))
imp <-  mice(nhanes2, m = 3, print = FALSE)
imp
stripplot(imp, col = c("red", "blue"), pch = c(1, 20))
stripplot(imp, col = c("red", "blue"), pch = c(2, 20))
stripplot(imp, col = c("red", "blue"), pch = c(1, 50))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20))
densityplot(imp, col = c("red", "blue"), pch = c(1, 20))
bwplot(imp, col = c("red", "blue"), pch = c(1, 20))
stripplot(bmi + hyp + chl ~ .imp, col = c("red", "blue"), pch = c(1, 20))
stripplot(imp, bmi + hyp + chl ~ .imp, col = c("red", "blue"), pch = c(1, 20))
nhanes2
str(nhanes2)
str(nhanes2$hyp)
stripplot(imp, bmi + hyp + chl ~ .imp, col = c("red", "blue"), pch = c(1, 1))
stripplot(imp, bmi + hyp + chl ~ .imp, col = c("red", "blue"), pch = c(20, 20))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), size = c(20, 20))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), size = c(50, 20))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), cex = c(50, 20))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), cex = c(10, 10))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), cex = c(1, 1))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), cex = c(2, 2))
#| message: false
#| warning: false
library(tidyverse)
library(mice)
library(gtsummary)
data(nhanes2)
nhanes2 |> tibble() |> print(n = Inf)
lm(bmi ~ age + hyp + chl, data = nhanes2) |>
tbl_regression() |>
add_glance_source_note()
library(questionr)
freq.na(nhanes2)
md.pattern(nhanes2)
imp <-  mice(nhanes2, m = 3, print = FALSE)
imp
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), cex = c(2, 2))
complete(mice_dat, "all", include = T)
complete(mice_dat,include = T)
complete(mice_dat, "all", include = T)
complete(mice_dat, "long", include = T)
str(complete(mice_dat, "all", include = T))
str(complete(mice_dat, "long", include = T))
str(complete(mice_dat, "broad", include = T))
complete(mice_dat, "long", include = T)
complete(imp, 2)
complete(imp, "broad", include = T, print = F) |>
select(contains("bmi")) |> tibble() |> print(n = Inf)
temp <-  pool(imp)
fit_imp <- with(imp, lm(bmi ~ age + hyp + chl))
summary(fit_imp)
temp <-  pool(fit_imp)
temp
temp |> tbl_regression()
fit_imp |> tbl_regression()
fit_imp |>
tbl_regression() |>
add_glance_source_note()
lm(bmi ~ age + hyp + chl, data = nhanes2) |>
tbl_regression() |>
add_glance_source_note()
#| message: false
#| warning: false
library(tidyverse)
library(mice)
library(gtsummary)
data(nhanes2)
nhanes2 |> tibble() |> print(n = Inf)
lm(bmi ~ age + hyp + chl, data = nhanes2) |>
tbl_regression() |>
add_glance_source_note()
library(questionr)
freq.na(nhanes2)
md.pattern(nhanes2)
set.seed(1234)
imp <-  mice(nhanes2, m = 3, print = FALSE)
imp
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), cex = c(2, 2))
imp_all <-  complete(imp, "all", include = T)
imp_all
imp_long <-  complete(imp, "long", include = T)
imp_long |> tibble() |> print(n = Inf)
imp_wide <-  complete(imp, "broad", include = T)
imp_wide |> tibble() |> print(n = Inf)
complete(imp, 2) |> tibble() |> print(n = Inf)
complete(imp, "broad", include = T) |>
select(contains("bmi")) |> tibble() |> print(n = Inf)
fit_imp <- with(imp, lm(bmi ~ age + hyp + chl))
summary(fit_imp)
summary(pool(fit_imp), conf.int = TRUE)
#| message: false
#| warning: false
fit_imp |>
tbl_regression() |>
add_glance_source_note()
lm(bmi ~ age + hyp + chl, data = nhanes2) |>
tbl_regression() |>
add_glance_source_note()
lm(bmi ~ age + hyp + chl, data = nhanes2) |>
tbl_regression()
librray(survival)
fit2 <- coxph(Surv(time, status) ~ age +ph.karno+sex, data=lung)
library(survival)
fit2 <- coxph(Surv(time, status) ~ age +ph.karno+sex, data=lung)
zph <- cox.zph(fit2)
zph
fit.tt <- coxph(Surv(time, status) ~ age + ph.karno + tt(ph.karno)+ sex, data=lung, tt = function(x, t, ...) x * t)
summary(fit.tt)
zph.tt <- cox.zph(fit2, transform=function(t) t)
plot(zph.tt[2])
abline(coef(fit.tt)[2:3], col=2)
cox.zph(fit.tt)
plot(zph[2])
library(survival)
fit <- coxph(Surv(time, status) ~ age +ph.karno+sex, data=lung)
zph <- cox.zph(fit)
zph
plot(zph[2])
abline(coef(fit)[2:3], col=2)
plot(zph[1])
plot(zph[2])
coef(fit)
coef(fit)[2:3]
abline(coef(fit)[2], col=2)
coef(fit)[2:3]
fit.tt <- coxph(Surv(time, status) ~ age + ph.karno + tt(ph.karno)+ sex, data=lung, tt = function(x, t, ...) x * t)
summary(fit.tt)
zph.tt <- cox.zph(fit, transform=function(t) t)
plot(zph.tt[2])
coef(fit.tt)[2:3]
abline(coef(fit.tt)[2:3], col=2)
abline(coef(fit)[2:2], col=2)
fit.tt <- coxph(Surv(time, status) ~ age + ph.karno + tt(ph.karno)+ sex, data=lung, tt = function(x, t, ...) x * log(t))
summary(fit.tt)
zph.tt <- cox.zph(fit, transform=function(t) log(t))
plot(zph.tt[2])
abline(coef(fit.tt)[2:3], col=2)
fit.tt <- coxph(Surv(time, status) ~ age + ph.karno + tt(ph.karno)+ sex, data=lung, tt = function(x, t, ...) x * log(t+20))
summary(fit.tt)
zph.tt <- cox.zph(fit, transform=function(t) log(t+20))
plot(zph.tt[2])
abline(coef(fit.tt)[2:3], col=2)
coef(fit.tt)
fit.tt <- coxph(Surv(time, status) ~ trt + prior + ph.karno + tt(ph.karno), data=lung, tt = function(x, t, ...) x * log(t+20))
fit.tt <- coxph(Surv(time, status) ~ trt + prior + ph.karno + tt(ph.karno), data=veteran, tt = function(x, t, ...) x * log(t+20))
fit.tt <- coxph(Surv(time, status) ~ trt + prior + karno + tt(karno), data=veteran, tt = function(x, t, ...) x * log(t+20))
summary(fit.tt)
zph.tt <- cox.zph(fit, transform=function(t) log(t+20))
plot(zph.tt[2])
abline(coef(fit.tt)[2:3], col=2)
coef(fit.tt)
abline(coef(fit.tt)[3:4], col=2)
fit.tt <- coxph(Surv(time, status) ~ trt + prior + karno + tt(karno), data=veteran, tt = function(x, t, ...) x * log(t+20))
summary(fit.tt)
zph.tt <- cox.zph(fit, transform=function(t) log(t+20))
plot(zph.tt[2])
abline(coef(fit.tt)[3:4], col=2)
fit.tt <- coxph(Surv(time, status) ~ trt + prior + karno + tt(karno), data=veteran, tt = function(x, t, ...) x * log(t+20))
summary(fit.tt)
zph.tt <- cox.zph(fit.tt, transform=function(t) log(t+20))
fit <- coxph(Surv(time, status) ~ trt + prior + karno, data=veteran)
summary(fit.tt)
fit.tt <- coxph(Surv(time, status) ~ trt + prior + karno + tt(karno), data=veteran, tt = function(x, t, ...) x * log(t+20))
summary(fit.tt)
zph.tt <- cox.zph(fit.tt, transform=function(t) log(t+20))
fit <- coxph(Surv(time, status) ~ trt + prior + karno, data=veteran)
summary(fit.tt)
fit.tt <- coxph(Surv(time, status) ~ trt + prior + karno + tt(karno), data=veteran, tt = function(x, t, ...) x * log(t+20))
summary(fit.tt)
zph.tt <- cox.zph(fit, transform=function(t) log(t+20))
plot(zph.tt[2])
abline(coef(fit.tt)[3:4], col=2)
fit <- coxph(Surv(time, status) ~ trt + prior + karno, data=veteran)
summary(fit)
zph <- cox.zph(fit)
zph
zph.tt <- cox.zph(fit, transform=function(t) log(t+20))
zph.tt
plot(zph[3])
fit <- coxph(Surv(time, status) ~ trt + prior + karno, data=veteran)
summary(fit)
zph <- cox.zph(fit)
zph
plot(zph[3])
fit.tt <- coxph(Surv(time, status) ~ trt + prior + karno + tt(karno), data=veteran, tt = function(x, t, ...) x * log(t+20))
summary(fit.tt)
plot(zph.tt[3])
abline(coef(fit.tt)[3:4], col=2)
fit <- coxph(Surv(time, status) ~ age + ph.karno + sex, data = lung)
summary(fit)
zph <- cox.zph(fit)
zph
plot(zph[2])
fit <- coxph(Surv(time, status) ~ age + ph.karno + sex, data = lung)
summary(fit)
# Check Schoenfeld residuals
zph <- cox.zph(fit)
zph
# Plot residuals and average beta (log HR)
plot(zph[2])
coef(fit)[2:2]
abline(coef(fit)[2], col=2)
abline(a = coef(fit)[2], b = 0, col=2)
zph.tt <- cox.zph(fit, transform=function(t) t)
zph.tt
zph <- cox.zph(fit)
zph
# Now fit time interaction to residuals
zph.tt <- cox.zph(fit, transform=function(t) log(t))
zph.tt
zph.tt <- cox.zph(fit, transform=function(t) t)
zph.tt
zph
# Now fit standard time transform to residuals
zph.tt <- cox.zph(fit, transform=function(t) t)
zph.tt # marginal improvement in ph.karno
# Replot residuals with time transform
plot(zph.tt[2])
abline(a = coef(fit.tt)[2], a = coef(fit.tt)[3], col = 2)
abline(a = coef(fit.tt)[2], b = coef(fit.tt)[3], col = 2)
abline(coef(fit.tt)[2:3], col = 2)
# Now fit standard time transform to residuals
zph.tt <- cox.zph(fit, transform=function(t) t)
zph.tt # marginal improvement in ph.karno
# Replot residuals with time transform
plot(zph.tt[2])
abline(coef(fit.tt)[2:3], col = 2)
# Replot residuals with time transform
plot(zph.tt[2])
# Fit time transform in model
fit.tt <- coxph(Surv(time, status) ~ age + ph.karno + tt(ph.karno) + sex, data = lung, tt = function(x, t, ...) x * t)
# Now fit standard time transform to residuals
zph.tt <- cox.zph(fit, transform = function(t) t)
zph.tt # marginal improvement in ph.karno
# Replot residuals with time transform
plot(zph.tt[2])
abline(coef(fit.tt)[2:3], col = 2)
# Fit time transform in model
fit.tt <- coxph(Surv(time, status) ~ age + ph.karno + tt(ph.karno) + sex, data = lung, tt = function(x, t, ...) x * t)
summary(fit.tt)
# Now fit standard time transform to residuals
zph.tt <- cox.zph(fit, transform = function(t) t)
zph.tt # marginal improvement in ph.karno
# Replot residuals with time transform
plot(zph.tt[2])
abline(coef(fit.tt)[2:3], col = 2)
fit.tt2 <- coxph(Surv(time, status) ~ age + ph.karno + tt(ph.karno) + sex, data = lung, tt = function(x, t, ...) x * log(t))
summary(fit.tt2)
# Apply standard time transform to residuals
zph.tt2 <- cox.zph(fit, transform = function(t) log(t))
zph.tt2 # marginal improvement in ph.karno
plot(zph.tt2[2])
abline(coef(fit.tt2)[2:3], col = 2)
coef(fit.tt2)[2:3]
library(survival)
# Fit cox model with no time dependence
fit <- coxph(Surv(time, status) ~ age + ph.karno + sex, data = lung)
summary(fit)
# Check Schoenfeld residuals
zph <- cox.zph(fit)
zph # ph.karno is a problem
# Plot residuals and average beta (log HR)
plot(zph[2])
abline(a = coef(fit)[2], b = 0, col = 2)
# Fit standard time interaction in model
fit.tt <- coxph(Surv(time, status) ~ age + ph.karno + tt(ph.karno) + sex, data = lung, tt = function(x, t, ...) x * t)
summary(fit.tt)
# Replot residuals with time interaction
plot(zph[2])
abline(coef(fit.tt)[2:3], col = 2)
# Check Schoenfeld residuals
zph <- cox.zph(fit)
# Plot residuals and average beta (log HR)
plot(zph[2])
# Fit cox model with no time dependence
fit <- coxph(Surv(time, status) ~ age + ph.karno + sex, data = lung)
summary(fit)
# Check Schoenfeld residuals
zph <- cox.zph(fit)
# Plot residuals and average beta (log HR)
plot(zph[2])
abline(a = coef(fit)[2], b = 0, col = 2)
# Fit standard time interaction in model
fit.tt <- coxph(Surv(time, status) ~ age + ph.karno + tt(ph.karno) + sex, data = lung, tt = function(x, t, ...) x * t)
summary(fit.tt)
# Apply standard time transform to residuals
zph.tt <- cox.zph(fit, transform = function(t) t)
# Replot residuals with time transform
plot(zph.tt[2])
abline(coef(fit.tt)[2:3], col = 2)
zph
zph.tt
# Apply standard time transform to residuals
zph.tt <- cox.zph(fit, transform = function(t) t^2)
zph.tt
# Fit standard time interaction in model
fit.tt <- coxph(Surv(time, status) ~ age + ph.karno + tt(ph.karno) + sex, data = lung, tt = function(x, t, ...) x * t^2)
summary(fit.tt)
# Apply standard time transform to residuals
zph.tt <- cox.zph(fit, transform = function(t) t^2)
# Replot residuals with time transform
plot(zph.tt[2])
abline(coef(fit.tt)[2:3], col = 2)
library(survival)
# Fit cox model with no time dependence
fit <- coxph(Surv(time, status) ~ age + ph.karno + sex, data = lung)
summary(fit)
# Check Schoenfeld residuals
zph <- cox.zph(fit)
# Plot residuals and average beta (log HR)
plot(zph[2])
abline(a = coef(fit)[2], b = 0, col = 2)
# Fit standard time interaction in model
fit.tt <- coxph(Surv(time, status) ~ age + ph.karno + tt(ph.karno) + sex, data = lung, tt = function(x, t, ...) x * t)
summary(fit.tt)
# Apply standard time transform to residuals
zph.tt <- cox.zph(fit, transform = function(t) t)
# Replot residuals with time transform
plot(zph.tt[2])
abline(coef(fit.tt)[2:3], col = 2)
#| message: false
#| warning: false
library(tidyverse)
library(mice)
library(gtsummary)
data(nhanes2)
nhanes2 |> tibble() |> print(n = Inf)
lm(bmi ~ age + hyp + chl, data = nhanes2) |>
tbl_regression() |>
add_glance_source_note()
library(questionr)
freq.na(nhanes2)
md.pattern(nhanes2)
set.seed(1234)
imp <-  mice(nhanes2, m = 3, print = FALSE)
imp
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), cex = c(2, 2))
imp_all <-  complete(imp, "all", include = T)
imp_all
imp_long <-  complete(imp, "long", include = T)
imp_long |> tibble() |> print(n = Inf)
imp_wide <-  complete(imp, "broad", include = T)
imp_wide |> tibble() |> print(n = Inf)
complete(imp, 2) |> tibble() |> print(n = Inf)
complete(imp, "broad", include = T) |>
select(contains("bmi")) |> tibble() |> print(n = Inf)
fit_imp <- with(imp, lm(bmi ~ age + hyp + chl))
summary(fit_imp)
summary(pool(fit_imp), conf.int = TRUE)
#| message: false
#| warning: false
fit_imp |>
tbl_regression() |>
add_glance_source_note()
lm(bmi ~ age + hyp + chl, data = nhanes2) |>
tbl_regression() |>
add_glance_source_note()
humans <- starwars |>
filter(species == "Human")
#| message: false
#| warning: false
library(tidyverse)
library(janitor)
# Create a data.frame with dirty names
test_df <- as.data.frame(matrix(ncol = 6))
names(test_df) <- c("firstName", "ábc@!*", "% successful (2009)",
"REPEAT VALUE", "REPEAT VALUE", "")
names(test_df)
test_df <-  clean_names(test_df)
names(test_df)
humans <- starwars |>
filter(species == "Human")
View(humans)
table(humans$eye_color)
table(humans$eye_color, humans$gender)
source("/Users/paulsanfilippo/Dropbox/Other Work Stuff/R Stuff/scripts/utils.R")
View(tab1)
humans |>
tabyl(eye_colour, show_na = show.miss) |>
adorn_totals("row") |>
adorn_pct_formatting(rounding = "half up", digits = 2)
humans |>
tabyl(eye_color, show_na = show.miss) |>
adorn_totals("row") |>
adorn_pct_formatting(rounding = "half up", digits = 2)
humans |>
tabyl(eye_color, show_na = T) |>
adorn_totals("row") |>
adorn_pct_formatting(rounding = "half up", digits = 2)
humans |>
tabyl(eye_color, show_na = T)
humans |>
tabyl(eye_color, show_na = T) |>
adorn_totals("row") |>
adorn_pct_formatting(rounding = "half up", digits = 2) |>
knitr::kable()
humans |>
tabyl(eye_color, gender, show_na = T) |>
adorn_totals("row") |>
adorn_totals("col") |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 2)
humans |>
tabyl(eye_color, gender, show_na = T) |>
adorn_totals("row") |>
adorn_totals("col") |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 2) |>
adorn_ns()
humans |>
tabyl(eye_color, gender, show_na = T) |>
adorn_totals("row") |>
adorn_totals("col") |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 2) |>
adorn_ns() |>
knitr::kable()
humans |>
tabyl(eye_color, gender, show_na = T)
table(humans$eye_color, humans$gender)
tab1(humans, T)
tab1(humans, eye_color, T)
View(humans)
humans |>
tabyl(eye_color, show_na = T) |>
adorn_totals("row") |>
adorn_pct_formatting(rounding = "half up", digits = 2)
humans |>
tabyl(eye_color, show_na = T) |>
adorn_totals("row") |>
adorn_pct_formatting(rounding = "half up", digits = 2) |>
knitr::kable()
tab1 <- function(df = dat, var, show.miss = T) {
df |>
tabyl({{var}}, show_na = show.miss) |>
adorn_totals("row") |>
adorn_pct_formatting(rounding = "half up", digits = 2) |>
knitr::kable()
}
tab1(humans, eye_color, T)
humans |>
tabyl(eye_color, gender, show_na = T) |>
adorn_totals("row") |>
adorn_totals("col") |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 2) |>
adorn_ns() |>
knitr::kable()
tab2(humans, eye_color, gender, show.miss = T)
dat <- read.csv("/Users/paulsanfilippo/Dropbox/Other Work Stuff/R Stuff/Book - Clinical Trial Data Analysis Using R and SAS/DBP.csv")
dat <- read.csv("/Users/paulsanfilippo/Dropbox/Other Work Stuff/R Stuff/Books/Clinical Trial Data Analysis Using R and SAS/DBP.csv")
# reshape
Dat <- dat |>
pivot_longer(3:7,
names_to = "Time",
names_prefix = "DBP",
values_to = "DBP")
library(tidyverse)
dat <- read.csv("/Users/paulsanfilippo/Dropbox/Other Work Stuff/R Stuff/Books/Clinical Trial Data Analysis Using R and SAS/DBP.csv")
# reshape
Dat <- dat |>
pivot_longer(3:7,
names_to = "Time",
names_prefix = "DBP",
values_to = "DBP")
# TRAJECTORY PLOT - Stratified by treatment group (individual trajectories superimposed)
ggplot(data = Dat, aes(x = Time, y = DBP, group = Subject)) +
geom_point(alpha = 0.5) +
geom_line(alpha = 0.5, aes(group = Subject), position = position_jitter(w = 0.1, h = 0.1)) +
guides(alpha = FALSE) +
stat_summary(aes(group = 1), geom = "point", fun.y = mean, size = 2, color = "red") +
stat_summary(aes(group = 1), geom = "line", fun.y = mean, size = 1, color = "red") +
stat_summary(fun.y=mean, geom="label", aes(group = 1, label=round(..y.., 1))) +
scale_x_discrete(breaks = seq(0,3,1)) +
scale_y_continuous(breaks = seq(0,10,1)) +
facet_grid(. ~ TRT) +
theme_bw(base_size = 15) +
ggtitle("Group Trajectories") +
xlab("Visit") + ylab("DBP")
data(coffee_data, package = "ggeffects")
install.packages("ggeffects")
data(coffee_data, package = "ggeffects")
force(coffee_data)
data(efc, package = "ggeffects")
force(efc)
View(efc)
data(mtcars)
force(mtcars)
data(nodal, package = "boot")
force(nodal)
data(esoph, package = "datasets")
force(esoph)
data(brca, package = "dclabs")
install.packages("dslabs")
data(brca, package = "dclabs")
data(brca, package = "dslabs")
force(brca)
View(brca)
data(VA, package = "MASS")
force(VA)
data(birthwt, package = "MASS")
force(birthwt)
View(birthwt)
glimpse(birthwt)
