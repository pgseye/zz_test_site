adorn_totals(c("row", "col")) |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 0) |>
adorn_ns() |>
adorn_title("combined")
tab[1:2, 2:3] <- cell_spec(tab[1:2, 2:3], bold = T)
tab |>
kable("html", escape = F) |>
kable_paper(bootstrap_options = "hover", full_width = F)
tab <- df |>
tabyl(coffee_drinker, outcome) |>
adorn_totals(c("row", "col")) |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 0) |>
adorn_ns() |>
adorn_title("combined")
tab[1:2, 2:3] <- cell_spec(tab[1:2, 2:3], bold = T)
tab |>
kable(escape = F) |>
kable_paper(bootstrap_options = "hover", full_width = F)
tab <- df |>
tabyl(coffee_drinker, outcome) |>
adorn_totals(c("row", "col")) |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 0) |>
adorn_ns() |>
adorn_title("combined")
tab[1:2, 2:3] <- cell_spec(tab[1:2, 2:3], bold = T)
tab |>
kable("html", escape = F)
tab <- df |>
tabyl(coffee_drinker, outcome) |>
adorn_totals(c("row", "col")) |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 0) |>
adorn_ns() |>
adorn_title("combined")
tab[1:2, 2:3] <- cell_spec(tab[1:2, 2:3], bold = T, escape = F)
tab |>
kable("html", escape = F) |>
kable_paper(bootstrap_options = "hover", full_width = F)
df |>
tabyl(coffee_drinker, outcome) |>
adorn_totals(c("row", "col")) |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 0) |>
adorn_ns() |>
adorn_title("combined") |>
kable() |>
kable_paper(bootstrap_options = "hover", full_width = F) |>
column_spec(2:3, bold = T) |>
row_spec(1:2, bold = T)
tab <- df |>
tabyl(coffee_drinker, outcome) |>
adorn_totals(c("row", "col")) |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 0) |>
adorn_ns() |>
adorn_title("combined")
tab[1:2, 2:3] <- cell_spec(tab[1:2, 2:3], bold = T)
tab |>
kable("html", escape = F) |>
kable_paper(bootstrap_options = "hover", full_width = F)
str(tab)
tab <- df |>
tabyl(coffee_drinker, outcome) |>
adorn_totals(c("row", "col")) |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 0) |>
adorn_ns() |>
adorn_title("combined") |>
data.frame()
str(tab)
tab
tab[2,2]
tab[2,3]
df |>
tabyl(coffee_drinker, outcome) |>
adorn_totals(c("row", "col")) |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 0) |>
adorn_ns() |>
adorn_title("combined") |>
kable() |>
kable_paper(bootstrap_options = "hover", full_width = F) |>
column_spec(2:3, bold = T) |>
row_spec(1:2, bold = T)
tab <- df |>
tabyl(coffee_drinker, outcome) |>
adorn_totals(c("row", "col")) |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 0) |>
adorn_ns() |>
adorn_title("combined") |>
data.frame()
tab
tab[1:2, 2:3]
cell_spec(tab[1:2, 2:3], bold = T)
tab[1:2, 2:3] <- cell_spec(tab[1:2, 2:3], bold = T)
tab
tab <- df |>
tabyl(coffee_drinker, outcome) |>
adorn_totals(c("row", "col")) |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 0) |>
adorn_ns() |>
adorn_title("combined") |>
data.frame()
tab[1:2, 2:3] <- cell_spec(tab[1:2, 2:3], bold = T)
tab
tab |>
kable(escape = F) |>
kable_paper(bootstrap_options = "hover", full_width = F)
tab <- df |>
tabyl(coffee_drinker, outcome) |>
adorn_totals(c("row", "col")) |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 0) |>
adorn_ns() |>
adorn_title("combined") |>
data.frame()
tab[1:2, 2:3] <- cell_spec(tab[1:2, 2:3], bold = T)
tab |>
kable("html", escape = F) |>
kable_paper(bootstrap_options = "hover", full_width = F)
tab <- df |>
tabyl(coffee_drinker, outcome) |>
adorn_totals(c("row", "col")) |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 0) |>
adorn_ns() |>
adorn_title("combined") |>
data.frame()
tab[1, 2] <- cell_spec(tab[1, 2], bold = T)
tab |>
kable("html", escape = F) |>
kable_paper(bootstrap_options = "hover", full_width = F)
tab <- df |>
tabyl(coffee_drinker, outcome) |>
adorn_totals(c("row", "col")) |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 0) |>
adorn_ns() |>
adorn_title("combined") |>
data.frame()
tab[1, 2] <- cell_spec(tab[1, 2], bold = T)
tab[1, 3] <- cell_spec(tab[1, 3], bold = T)
tab[2, 2] <- cell_spec(tab[2, 2], bold = T)
tab[2, 3] <- cell_spec(tab[2, 3], bold = T)
tab |>
kable("html", escape = F) |>
kable_paper(bootstrap_options = "hover", full_width = F)
tab <- df |>
tabyl(coffee_drinker, outcome) |>
adorn_totals(c("row", "col")) |>
adorn_percentages("row") |>
adorn_pct_formatting(rounding = "half up", digits = 0) |>
adorn_ns() |>
adorn_title("combined")
tab[1, 2] <- cell_spec(tab[1, 2], bold = T)
tab[1, 3] <- cell_spec(tab[1, 3], bold = T)
tab[2, 2] <- cell_spec(tab[2, 2], bold = T)
tab[2, 3] <- cell_spec(tab[2, 3], bold = T)
tab |>
kable("html", escape = F) |>
kable_paper(bootstrap_options = "hover", full_width = F)
#| message: false
#| warning: false
ggplot(data = df) +
geom_mosaic(aes(x = product(coffee_drinker, outcome), color = "chocolate1")) +
theme_bw(base_size = 40)
#| message: false
#| warning: false
ggplot(data = df) +
geom_mosaic(aes(x = product(coffee_drinker, outcome)), color = "chocolate1") +
theme_bw(base_size = 40)
#| message: false
#| warning: false
ggplot(data = df) +
geom_mosaic(aes(x = product(coffee_drinker, outcome)), fill = "chocolate1") +
theme_bw(base_size = 40)
#| message: false
#| warning: false
ggplot(data = df) +
geom_mosaic(aes(x = product(coffee_drinker, outcome)), fill = "deepskyblue2") +
theme_bw(base_size = 40)
#| message: false
#| warning: false
df2 <- df
df2$coffee_drinker <- relevel(df2$coffee_drinker, ref = 1)
ggplot(data = df2) +
geom_mosaic(aes(x = product(coffee_drinker, outcome)), fill = "deepskyblue2") +
theme_bw(base_size = 40)
#| message: false
#| warning: false
df2 <- df
df2$coffee_drinker <- relevel(df2$coffee_drinker, ref = 0)
#| message: false
#| warning: false
df2 <- df
df2$coffee_drinker <- relevel(df2$coffee_drinker, ref = "no")
ggplot(data = df2) +
geom_mosaic(aes(x = product(coffee_drinker, outcome)), fill = "deepskyblue2") +
theme_bw(base_size = 40)
#| message: false
#| warning: false
df2 <- df
df2$coffee_drinker <- relevel(df2$coffee_drinker, ref = "yes")
ggplot(data = df2) +
geom_mosaic(aes(x = product(coffee_drinker, outcome)), fill = "deepskyblue2") +
theme_bw(base_size = 40)
#| message: false
#| warning: false
df2 <- df
df2$coffee_drinker <- relevel(df2$coffee_drinker, ref = "yes")
ggplot(data = df2) +
geom_mosaic(aes(x = product(coffee_drinker, outcome)), fill = coffee_drinker) +
theme_bw(base_size = 40)
ggplot(data = df2) +
geom_mosaic(aes(x = product(coffee_drinker, outcome)), fill = coffee_drinker) +
theme_bw(base_size = 40)
#| message: false
#| warning: false
df2 <- df
df2$coffee_drinker <- relevel(df2$coffee_drinker, ref = "yes")
ggplot(data = df2) +
geom_mosaic(aes(x = product(coffee_drinker, outcome)), fill = coffee_drinker) +
theme_bw(base_size = 40)
#| message: false
#| warning: false
df2 <- df
df2$coffee_drinker <- relevel(df2$coffee_drinker, ref = "yes")
ggplot(data = df2) +
geom_mosaic(aes(x = product(coffee_drinker, outcome)), fill = coffee_drinker) +
theme_bw(base_size = 40)
str(df2)
#| message: false
#| warning: false
df2 <- df
df2$coffee_drinker <- relevel(df2$coffee_drinker, ref = "yes")
ggplot(data = df2) +
geom_mosaic(aes(x = product(coffee_drinker, outcome), fill = coffee_drinker)) +
theme_bw(base_size = 40)
$$\text{OR} = \frac{\text{9 x 1}}{\text{3 x 3}} = 1$$
12*16
192/32
3*14
```{r}
datasets.load:::datasets.load()
split_to_long <-  function(col){
i <-  substr(col, 5, 5)
temp <-  dat |>
select("id", all_of(col)) |>
separate_wider_delim(all_of(col),
",",
too_few = "align_start",
names = c(paste0(col,"_", c("base", "3mo", "6mo", "182mo")))) |>
pivot_longer(2:5,
names_to = "timepoint",
values_to = paste0("var_", i),
names_prefix = paste0("var_", i, "_"))
if (i > 1){
temp <-  temp[3]
}
temp
}
dat_converted2 <-  map(names(dat)[2:7], split_to_long) |> list_cbind()
library(tidyverse)
dat <-  structure(list(
id = 1:5,
var_1 = c("1,1,1,1", "1,1,1,1", "0,0,0,0", "1,1,1,1", "1,1,1,-11000"),
var_2 = c("0,8,0,0", "0,0,0,0", "-13000,-13000,-13000,-13000", "0,0,0,0", "0,0,20,-13000"),
var_3 = c("0,0,0,0", "0,0,1,2", "-13000,-13000,-13000,-13000", "0,0,0,0", "0,0,0,-13000"),
var_4 = c("38,30,38,30", "24,34,28,30", "-13000,-13000,-13000,-13000", "50,60,60,61", "40,16,20,-13000"),
var_5 = c("2,4,1,3", "1,1,1,3", "-13000,-13000,-13000,-13000", "0,3,3,0", "4,6,7,-13000"),
var_6 = c("4,10,1,1", "1,2,1,3", "-13000,-13000,-13000,-13000", "0,1,0,0", "6,8,4,-13000")),
row.names = 1:5, class = "data.frame")
# Function to each column containing several values to multiple columns containing one value each, and convert to long in one step
split_to_long <-  function(col){
#browser()
i <-  substr(col, 5, 5)
temp <-  dat |>
select("id", all_of(col)) |>
separate_wider_delim(all_of(col),
",",
too_few = "align_start",
names = c(paste0(col,"_", 1:3))) |>
pivot_longer(2:4,
names_to = "visit",
values_to = paste0("var_", i),
names_prefix = paste0("var_", i, "_"))
if (i > 1){
temp <-  temp[3]
}
temp
}
dat_converted <-  map(names(dat)[2:4], split_to_long) |> list_cbind()
dat <-  structure(list(
id = 1:5,
var_1 = c("1,1,1,1", "1,1,1,1", "0,0,0,0", "1,1,1,1", "1,1,1,-11000"),
var_2 = c("0,8,0,0", "0,0,0,0", "-13000,-13000,-13000,-13000", "0,0,0,0", "0,0,20,-13000"),
var_3 = c("0,0,0,0", "0,0,1,2", "-13000,-13000,-13000,-13000", "0,0,0,0", "0,0,0,-13000"),
var_4 = c("38,30,38,30", "24,34,28,30", "-13000,-13000,-13000,-13000", "50,60,60,61", "40,16,20,-13000"),
var_5 = c("2,4,1,3", "1,1,1,3", "-13000,-13000,-13000,-13000", "0,3,3,0", "4,6,7,-13000"),
var_6 = c("4,10,1,1", "1,2,1,3", "-13000,-13000,-13000,-13000", "0,1,0,0", "6,8,4,-13000")),
row.names = 1:5, class = "data.frame")
split_to_long <-  function(col){
i <-  substr(col, 5, 5)
temp <-  dat |>
select("id", all_of(col)) |>
separate_wider_delim(all_of(col),
",",
too_few = "align_start",
names = c(paste0(col,"_", c("base", "3mo", "6mo", "182mo")))) |>
pivot_longer(2:5,
names_to = "timepoint",
values_to = paste0("var_", i),
names_prefix = paste0("var_", i, "_"))
if (i > 1){
temp <-  temp[3]
}
temp
}
dat_converted2 <-  map(names(dat)[2:7], split_to_long) |> list_cbind()
dat_converted2
dat_converted2 <-  apply(names(dat)[2:7], split_to_long) |> list_cbind()
dat_converted2 <-  apply(names(dat)[2:7], split_to_long, 2) |> list_cbind()
dat_converted2 <-  apply(names(dat)[2:7], 2, split_to_long) |> list_cbind()
map(names(dat)[2:7], split_to_long) |> list_cbind()
split_to_long <-  function(col){
i <-  substr(col, 5, 5)
temp <-  dat |>
select("id", all_of(col)) |>
separate_wider_delim(all_of(col),
",",
too_few = "align_start",
names = c(paste0(col,"_", c("base", "3mo", "6mo", "12mo")))) |>
pivot_longer(2:5,
names_to = "timepoint",
values_to = paste0("var_", i),
names_prefix = paste0("var_", i, "_"))
if (i > 1){
temp <-  temp[3]
}
temp
}
dat_converted2 <-  map(names(dat)[2:7], split_to_long) |> list_cbind()
dat_converted2
split_to_long <-  function(col){
i <-  substr(col, 5, 5)
temp <-  dat |>
select("id", all_of(col)) |>
separate_wider_delim(all_of(col),
",",
too_few = "align_start",
names = c(paste0(col,"_", c("base", "3mo", "6mo", "12mo")))) |>
pivot_longer(2:5,
names_to = "timepoint",
values_to = paste0("var_", i),
names_prefix = paste0("var_", i, "_"))
if (i > 1){
temp <-  temp[3]
}
temp
}
split_to_long("var_1")
split_to_long("var_2")
dat
dat_converted <-  data.frame()
for (i in seq_along(dat)[2:6]){
dat_converted <-  cbind(dat_converted, split_to_long(paste0("var_", i)))
}
split_to_long <-  function(col){
i <-  substr(col, 5, 5)
temp <-  dat |>
select("id", all_of(col)) |>
separate_wider_delim(all_of(col),
",",
too_few = "align_start",
names = c(paste0(col,"_", c("base", "3mo", "6mo", "12mo")))) |>
pivot_longer(2:5,
names_to = "timepoint",
values_to = paste0("var_", i),
names_prefix = paste0("var_", i, "_"))
if (i > 1){
temp <-  temp[3]
}
temp
}
dat_converted <-  data.frame()
for (i in seq_along(dat)[2:6]){
dat_converted <-  cbind(dat_converted, split_to_long(paste0("var_", i)))
}
dat_converted <-  data.frame()
for (i in seq_along(dat)[2:6]){
browser()
dat_converted <-  cbind(dat_converted, split_to_long(paste0("var_", i)))
}
dat_converted <-  data.frame()
for (i in seq_along(dat)[2:6]){
browser()
dat_converted <-  cbind(dat_converted, split_to_long(paste0("var_", i)))
}
seq_along(dat)[2:6]
seq_along(dat)
dat
seq_along(dat[2:7])
dat_converted <-  data.frame()
for (i in seq_along(dat[2:7])){
browser()
dat_converted <-  cbind(dat_converted, split_to_long(paste0("var_", i)))
}
View(dat_converted)
dat_converted <-  data.frame()
for (i in seq_along(dat[2:7])){
browser()
dat_converted
dat_converted <-  cbind(dat_converted, split_to_long(paste0("var_", i)))
}
paste0("var_", 1)
dat_converted <-  data.frame()
for (name in names(dat[2:7])){
browser()
dat_converted
dat_converted <-  cbind(dat_converted, split_to_long(name))
}
dat_converted <-  data.frame()
for (i in seq_along(dat)){
browser()
dat_converted
dat_converted <-  cbind(dat_converted, split_to_long(paste0("var_", i)))
}
dat_converted <-  split_to_long("var_1")
for (i in seq_along(dat[2:7])){
dat_converted <-  cbind(dat_converted, split_to_long(paste0("var_", i)))
}
dat_converted
dat_converted <-  split_to_long("var_1")
for (name in names(dat[2:7])){
browser()
dat_converted
dat_converted <-  cbind(dat_converted, split_to_long(name))
}
dat_converted
dat_converted <-  split_to_long("var_1")
for (name in names(dat[2:7])){
dat_converted <-  cbind(dat_converted, split_to_long(name))
}
dat_converted
for (name in names(dat[2:7])){
dat_converted <-  cbind(dat_converted, split_to_long(name))
}
dat_converted
for (name in names(dat[2:7])){
dat_converted <-  cbind(dat_converted, split_to_long(name))
}
dat_converted <-  data.frame()
dat_converted <-  data.frame()
for (name in names(dat[2:7])){
dat_converted <-  cbind(dat_converted, split_to_long(name))
}
dat_converted <-  data.frame(nrow = 20)
for (name in names(dat[2:7])){
dat_converted <-  cbind(dat_converted, split_to_long(name))
}
dat_converted
dat_converted <-  data.frame(matrix(nrow = 20))
for (name in names(dat[2:7])){
dat_converted <-  cbind(dat_converted, split_to_long(name))
}
dat_converted
dat_converted <-  data.frame(matrix(nrow = 20, ncol = 1))
for (name in names(dat[2:7])){
dat_converted <-  cbind(dat_converted, split_to_long(name))
}
dat_converted
data.frame(matrix(ncol = 3, nrow = 0))
data.frame(matrix(nrow = 20, ncol = 1))
data.frame(matrix(ncol = 1, nrow = 20))
data.frame(matrix(ncol = 3, nrow = 0))
data.frame(matrix(ncol = 1, nrow = 20))
data.frame(matrix(ncol = 3, nrow = 20))
data.frame(matrix(ncol = 0, nrow = 20))
dat_converted <-  data.frame(matrix(ncol = 0, nrow = 20))
for (name in names(dat[2:7])){
dat_converted <-  cbind(dat_converted, split_to_long(name))
}
dat_converted
apply(dat[2:7], 2, split_to_long)
apply(names(dat)[2:7], 2, split_to_long)
apply(names(dat)[,2:7], 2, split_to_long)
names(dat)[2:7]
apply(dat, 2, split_to_long)
dat
apply(dat, 2, split_to_long)
lapply(dat, 2, split_to_long)
lapply(dat, split_to_long)
dat <-  structure(list(
id = 1:5,
var_1 = c("1,1,1,1", "1,1,1,1", "0,0,0,0", "1,1,1,1", "1,1,1,-11000"),
var_2 = c("0,8,0,0", "0,0,0,0", "-13000,-13000,-13000,-13000", "0,0,0,0", "0,0,20,-13000"),
var_3 = c("0,0,0,0", "0,0,1,2", "-13000,-13000,-13000,-13000", "0,0,0,0", "0,0,0,-13000"),
var_4 = c("38,30,38,30", "24,34,28,30", "-13000,-13000,-13000,-13000", "50,60,60,61", "40,16,20,-13000"),
var_5 = c("2,4,1,3", "1,1,1,3", "-13000,-13000,-13000,-13000", "0,3,3,0", "4,6,7,-13000"),
var_6 = c("4,10,1,1", "1,2,1,3", "-13000,-13000,-13000,-13000", "0,1,0,0", "6,8,4,-13000")),
row.names = 1:5, class = "data.frame")
lapply(dat, split_to_long)
map(names(dat)[2:7], split_to_long) |> list_cbind()
lapply(dat[c('var_1', 'var_2')], split_to_long)
lapply(dat[c('id','var_1', 'var_2')], split_to_long)
rlang::last_trace()
source("~/.active-rstudio-document", echo=TRUE)
