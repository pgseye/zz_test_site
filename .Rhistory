# The model intercept and coefficient have been selected so that the probability of missingness will be ~ 12% for males and ~ 73% for females
logodds_missing <-  1 - 3 * sex
odds_missing <-  exp(logodds_missing)               # calculate odds of missingness
prob_missing  <-  odds_missing/(1 + odds_missing)   # calculate probability of missingness
# Assemble dataframe
dat <-  data.frame(sex = factor(sex, levels = c("0", "1"), labels = c("females", "males")),
bodyweight = bodyweight,
odds_missing = odds_missing,
prob_missing = prob_missing,
missing = factor(rbinom(n, 1, prob_missing), levels = c("0", "1"), labels = c("no", "yes")))
head(dat, 20) |>
kable(align = "c", digits = 2)
# Check simulated missing proportions with tabulation
table(dat$prob, dat$missing)
# This is about right
0.119*45 # gives 5/45 males with missingness
0.731*55 # gives 40/55 females with missingness
# Check simulated missing proportions with tabulation
table(dat$sex, dat$missing)
# Check simulated missing proportions with tabulation
table(dat$sex)
# Check that we recover the original coefficients:
lm(bodyweight ~ sex , data = dat) |>
tbl_regression
# Check that we recover the original coefficients:
mod <-  lm(bodyweight ~ sex , data = dat)
mod |>
tbl_regression
# Check that we recover the original coefficients:
lm(bodyweight ~ sex , data = dat) |>
tbl_regression
.12*45
.73*55
glm(missing ~ sex, data = dat, family = "binomial") |>
tbl_regression(intercept = TRUE, exp = TRUE) |>
modify_caption("**Table 1. Patient Characteristics**")
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
library(gtsummary)
# Simulation
n <- 100                   # set number of obs to simulate
set.seed(1234)             # set seed for reproducibility
sex <-  rbinom(n, 1, 0.5)  # generate sex variable ~ 50% females (0) and 50% males (1)
# Generate bodyweight from regression model based on additive effect of sex - on average, males are 5 kg heavier than females
bodyweight <-  5 + 5 * sex + rnorm(n, 0, 1)
# Now, let's create some missingness in bodyweight at random (where the missingness in bodyweight depends on sex)
# To do this we will leave the actual bodyweight values intact (as we will need them later) and create a separate missing variable to indicate which values would be absent in a real dataset.
# The model intercept and coefficient have been selected so that the probability of missingness will be ~ 12% for males and ~ 73% for females
logodds_missing <-  1 - 3 * sex
odds_missing <-  exp(logodds_missing)               # calculate odds of missingness
prob_missing  <-  odds_missing/(1 + odds_missing)   # calculate probability of missingness
# Assemble dataframe
dat <-  data.frame(sex = factor(sex, levels = c("0", "1"), labels = c("females", "males")),
bodyweight = bodyweight,
odds_missing = odds_missing,
prob_missing = prob_missing,
missing = factor(rbinom(n, 1, prob_missing), levels = c("0", "1"), labels = c("no", "yes")))
head(dat, 20) |>
kable(align = "c", digits = 2)
# Check that we recover the original coefficients:
lm(bodyweight ~ sex , data = dat) |>
tbl_regression(intercept = TRUE)
# Check expected missing proportions with tabulation
table(round(dat$prob, 2), dat$missing)
round(0.12*45, 0) # gives expectation 5/45 males with missingness
round(0.73*55, 0) # gives expectation 40/55 females with missingness
glm(missing ~ sex, data = dat, family = "binomial") |>
tbl_regression(intercept = TRUE, exp = TRUE) |>
modify_caption("**Missing (outcome) vs Sex (predictor)**")
# Females
lm(bodyweight ~ missing, data = subset(dat, sex == "females")) |>
tbl_regression() |>
modify_caption("**Females**")
# Males
lm(bodyweight ~ missing, data = subset(dat, sex == "males")) |>
tbl_regression() |>
modify_caption("**Males**")
#| message: false
#| warning: false
# Boxplots of distributions by sex
ggplot(dat, aes(x = sex, y = bodyweight, fill = missing)) +
geom_boxplot() +
geom_dotplot(binaxis = 'y', stackdir = 'center', dotsize = 0.5, position = position_dodge(0.75)) +
theme_bw(base_size = 20)
lm(bodyweight ~ missing * sex, data = dat) |>
tbl_regression() |>
modify_caption("**Interaction Model**")
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
library(gtsummary)
# Simulation
n <- 100                   # set number of obs to simulate
set.seed(1234)             # set seed for reproducibility
sex <-  rbinom(n, 1, 0.5)  # generate sex variable ~ 50% females (0) and 50% males (1)
# Generate bodyweight from regression model based on additive effect of sex - on average, males are 5 kg heavier than females
bodyweight <-  5 + 5 * sex + rnorm(n, 0, 1)
# Now, let's create some missingness in bodyweight at random (where the missingness in bodyweight depends on sex)
# To do this we will leave the actual bodyweight values intact (as we will need them later) and create a separate missing variable to indicate which values would be absent in a real dataset.
# The model intercept and coefficient have been selected so that the probability of missingness will be ~ 12% for males and ~ 73% for females
logodds_missing <-  1 - 3 * sex
odds_missing <-  exp(logodds_missing)               # calculate odds of missingness
prob_missing  <-  odds_missing/(1 + odds_missing)   # calculate probability of missingness
# Assemble dataframe
dat <-  data.frame(sex = factor(sex, levels = c("0", "1"), labels = c("females", "males")),
bodyweight = bodyweight,
odds_missing = odds_missing,
prob_missing = prob_missing,
missing = factor(rbinom(n, 1, prob_missing), levels = c("0", "1"), labels = c("no", "yes")))
head(dat, 20) |>
kable(align = "c", digits = 2)
# Check that we recover the original coefficients:
lm(bodyweight ~ sex , data = dat) |>
tbl_regression(intercept = TRUE)
# Check expected missing proportions with tabulation
table(round(dat$prob, 2), dat$missing)
round(0.12*45, 0) # gives expectation 5/45 males with missingness
round(0.73*55, 0) # gives expectation 40/55 females with missingness
glm(missing ~ sex, data = dat, family = "binomial") |>
tbl_regression(intercept = TRUE, exp = TRUE) |>
modify_caption("**Missing (outcome) vs Sex (predictor)**")
# Females
lm(bodyweight ~ missing, data = subset(dat, sex == "females")) |>
tbl_regression() |>
modify_caption("**Females**")
# Males
lm(bodyweight ~ missing, data = subset(dat, sex == "males")) |>
tbl_regression() |>
modify_caption("**Males**")
#| message: false
#| warning: false
# Boxplots of distributions by sex
ggplot(dat, aes(x = sex, y = bodyweight, fill = missing)) +
geom_boxplot() +
geom_dotplot(binaxis = 'y', stackdir = 'center', dotsize = 0.5, position = position_dodge(0.75)) +
theme_bw(base_size = 20)
lm(bodyweight ~ missing * sex, data = dat) |>
tbl_regression() |>
modify_caption("**Interaction Model**")
#| message: false
#| warning: false
library(tidyverse)
library(kableExtra)
library(gtsummary)
# Simulation
n <- 100                   # set number of obs to simulate
set.seed(1234)             # set seed for reproducibility
sex <-  rbinom(n, 1, 0.5)  # generate sex variable ~ 50% females (0) and 50% males (1)
# Generate bodyweight from regression model based on additive effect of sex - on average, males are 5 kg heavier than females
bodyweight <-  5 + 5 * sex + rnorm(n, 0, 1)
# Now, let's create some missingness in bodyweight at random (where the missingness in bodyweight depends on sex)
# To do this we will leave the actual bodyweight values intact (as we will need them later) and create a separate missing variable to indicate which values would be absent in a real dataset.
# The model intercept and coefficient have been selected so that the probability of missingness will be ~ 12% for males and ~ 73% for females
logodds_missing <-  1 - 3 * sex
odds_missing <-  exp(logodds_missing)               # calculate odds of missingness
prob_missing  <-  odds_missing/(1 + odds_missing)   # calculate probability of missingness
# Assemble dataframe
dat <-  data.frame(sex = factor(sex, levels = c("0", "1"), labels = c("females", "males")),
bodyweight = bodyweight,
odds_missing = odds_missing,
prob_missing = prob_missing,
missing = factor(rbinom(n, 1, prob_missing), levels = c("0", "1"), labels = c("no", "yes")))
head(dat, 20) |>
kable(align = "c", digits = 2)
# Check that we recover the original coefficients:
lm(bodyweight ~ sex , data = dat) |>
tbl_regression(intercept = TRUE)
# Check expected missing proportions with tabulation
table(round(dat$prob, 2), dat$missing)
round(0.12*45, 0) # gives expectation 5/45 males with missingness
round(0.73*55, 0) # gives expectation 40/55 females with missingness
glm(missing ~ sex, data = dat, family = "binomial") |>
tbl_regression(intercept = TRUE, exp = TRUE) |>
modify_caption("**Missing (outcome) vs Sex (predictor)**")
# Females
lm(bodyweight ~ missing, data = subset(dat, sex == "females")) |>
tbl_regression() |>
modify_caption("**Females**")
# Males
lm(bodyweight ~ missing, data = subset(dat, sex == "males")) |>
tbl_regression() |>
modify_caption("**Males**")
#| message: false
#| warning: false
# Boxplots of distributions by sex
ggplot(dat, aes(x = sex, y = bodyweight, fill = missing)) +
geom_boxplot() +
geom_dotplot(binaxis = 'y', stackdir = 'center', dotsize = 0.5, position = position_dodge(0.75)) +
theme_bw(base_size = 20)
lm(bodyweight ~ missing * sex, data = dat) |>
tbl_regression() |>
modify_caption("**Interaction Model**")
library(mice)
data(nhanes)
force(nhanes)
methods(coef)
methods(vcov)
#| message: false
#| warning: false
library(mice)
data(nhanes2)
force(nhanes2)
str(nhanes2)
#| message: false
#| warning: false
library(tidyverse)
library(mice)
library(kableExtra)
data(nhanes2)
nhanes2 |>
as.tibble()
#| message: false
#| warning: false
library(tidyverse)
library(mice)
library(kableExtra)
data(nhanes2)
nhanes2 |> print(n = Inf)
str(nhanes2)
#| message: false
#| warning: false
library(tidyverse)
library(mice)
library(kableExtra)
data(nhanes2)
nhanes2 |> tibble() |> print(n = Inf)
lm(bmi ~ age + hyp + chl, data = nhanes2) |>
tbl_regression() |>
add_glance_source_note()
#| message: false
#| warning: false
library(tidyverse)
library(mice)
library(gtsummary)
data(nhanes2)
nhanes2 |> tibble() |> print(n = Inf)
lm(bmi ~ age + hyp + chl, data = nhanes2) |>
tbl_regression() |>
add_glance_source_note()
12/25
remotes::install_github("thebioengineer/colortable")
library(colortable)
test <-  nhanes2
test
ifelse(is.na(test$bmi), 1, 0))
ifelse(is.na(test$bmi), 1, 0)
bmi_miss <-  ifelse(is.na(test$bmi), 1, 0)
text_colour = "red", text_colour = "black"))
data.frame(
text_color = sample(c(NA, valid_text_color()),10, replace = TRUE),
background = sample(c(NA, valid_background()),10, replace = TRUE),
style      = sample(c(NA, valid_style()),10, replace = TRUE),
stringsAsFactors = FALSE
)
library(colortable)
color_vctr(c(1,2,3,4),
text_color = c("blue","green", "yellow",NA),
style = c("underline","italic",NA,"bold"),
background = c(NA,NA,"blue",NA))
bmi_miss <-  ifelse(is.na(test$bmi), "red", "black")
bmi_miss
test |>
mutate(
bmi = color_vctr(bmi,
text_color = bmi_miss)
)
bmi_miss <-  ifelse(is.na(test$bmi), "red", "white")
test |>
mutate(
bmi = color_vctr(bmi,
text_color = bmi_miss)
)
bmi_miss <-  ifelse(is.na(test$bmi), "yellow", NA)
test |>
mutate(
bmi = color_vctr(bmi,
background = bmi_miss)
)
bmi_miss <-  ifelse(is.na(test$bmi), "yellow", NA)
test |>
mutate(
bmi = color_vctr(bmi,
background = bmi_miss)
)
bmi_miss
bmi_miss <-  ifelse(is.na(test$bmi), "yellow", NA)
test |>
mutate(
bmi = color_vctr(bmi,
background = bmi_miss)
)
test
test |>
mutate(
bmi = color_vctr(bmi,
background = bmi_miss)
) |>
tibble()
test |>
tibble()
test[is.na(bmi)] <-  20
test[is.na(test$bmi)] <-  20
test[,is.na(bmi)] <-  20
test[,is.na(test$bmi)] <-  20
test$bmi[is.na(test$bmi)] <-  20
test
test |>
mutate(
bmi = color_vctr(bmi,
background = bmi_miss)
)
test |>
tibble()
bmi_miss <-  ifelse(is.na(test$bmi), "red", NA)
test <-  nhanes2
test |>
tibble()
test$bmi[is.na(test$bmi)] <-  20
test |>
mutate(
bmi = color_vctr(bmi,
tect_colour = bmi_miss)
)
test
test |>
mutate(
bmi = color_vctr(bmi,
text_colour = bmi_miss)
)
test |>
mutate(
bmi = color_vctr(bmi,
text_color = bmi_miss)
)
bmi_miss <-  ifelse(is.na(test$bmi), "red", "blue")
test <-  nhanes2
test |>
tibble()
test$bmi[is.na(test$bmi)] <-  20
test |>
mutate(
bmi = color_vctr(bmi,
text_color = bmi_miss)
)
bmi_miss
test <-  nhanes2
bmi_miss <-  ifelse(is.na(test$bmi), "red", "blue")
test |>
tibble()
test$bmi[is.na(test$bmi)] <-  20
test |>
mutate(
bmi = color_vctr(bmi,
text_color = bmi_miss)
)
test <-  nhanes2
bmi_miss <-  ifelse(is.na(test$bmi), "red", "black")
test |>
tibble()
test$bmi[is.na(test$bmi)] <-  20
test |>
mutate(
bmi = color_vctr(bmi,
text_color = bmi_miss)
)
test |>
tibble()
test |>
print()
test |>
tibble()
test |>
tibble() |>
print(n = Inf)
temp <-  nhanes2
bmi_miss <-  ifelse(is.na(temp$bmi), "red", "black")
temp |>
tibble() |>
print(n = Inf)
temp$bmi[is.na(temp$bmi)] <-  20
temp |>
mutate(bmi = color_vctr(bmi,text_color = bmi_miss))
temp <-  nhanes2
bmi_miss <-  ifelse(is.na(temp$bmi), "yellow", NA)
temp |>
tibble() |>
print(n = Inf)
temp$bmi[is.na(temp$bmi)] <-  20
temp |>
mutate(bmi = color_vctr(bmi,background = bmi_miss))
# Run MI
mice_dat <-  mice(temp)
# Run MI
mice_dat <-  mice(temp, m = 3)
mice_dat
library(colortable)
library(mice)
temp <-  nhanes2
# Set color parameters for each variable's missingness
bmi_miss <-  ifelse(is.na(temp$bmi), "yellow", NA)
hyp_miss <-  ifelse(is.na(temp$hyp), "yellow", NA)
chl_miss <-  ifelse(is.na(temp$chl), "yellow", NA)
# Print original data
temp |>
tibble() |>
print(n = Inf)
# Run MI
mice_dat <-  mice(temp, m = 3)
mice_dat
str(mice_dat)
complete(mice_dat)
complete(mice_dat)[1]
complete(mice_dat[1])
complete(mice_dat, "long")
complete(mice_dat, "wide")
complete(mice_dat, "broad")
complete(mice_dat, "stacked")
complete(mice_dat, "broad")
complete(mice_dat, "wide")
complete(mice_dat, "all")
st(mice_dat)
str(mice_dat)
mice_dat$imp[1]
mice_dat$imp[2]
complete(mice_dat, "all")[1]
complete(mice_dat, "all")[2]
complete(mice_dat, "long")
complete(mice_dat, "broad")
cbind(temp,complete(mice_dat, "broad"))
complete(mice_dat, "broad", include = T)
complete(mice_dat, "all", include = T)
complete(mice_dat, "long", include = T)
complete(mice_dat, "broad", include = T)
bmi_allimps <-  complete(mice_dat, "broad", include = T) |>
select(contains("bmi"))
bmi_allimps
hyp_allimps <-  complete(mice_dat, "broad", include = T) |>
select(contains("hyp"))
hyp_allimps
library(questionr)
freq.na(nhanes2)
nhanes2
library(questionr)
freq.na(nhanes2)
md.pattern(nhanes2)
nhanes2
mice_dat <-  mice(temp, m = 3)
mice_dat
stripplot(imp, col = c("red", "blue"), pch = c(1, 20))
imp <-  mice(nhanes2, m = 3, print = FALSE)
imp
stripplot(imp, col = c("red", "blue"), pch = c(1, 20))
stripplot(imp, col = c("red", "blue"), pch = c(2, 20))
stripplot(imp, col = c("red", "blue"), pch = c(1, 50))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20))
densityplot(imp, col = c("red", "blue"), pch = c(1, 20))
bwplot(imp, col = c("red", "blue"), pch = c(1, 20))
stripplot(bmi + hyp + chl ~ .imp, col = c("red", "blue"), pch = c(1, 20))
stripplot(imp, bmi + hyp + chl ~ .imp, col = c("red", "blue"), pch = c(1, 20))
nhanes2
str(nhanes2)
str(nhanes2$hyp)
stripplot(imp, bmi + hyp + chl ~ .imp, col = c("red", "blue"), pch = c(1, 1))
stripplot(imp, bmi + hyp + chl ~ .imp, col = c("red", "blue"), pch = c(20, 20))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), size = c(20, 20))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), size = c(50, 20))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), cex = c(50, 20))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), cex = c(10, 10))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), cex = c(1, 1))
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), cex = c(2, 2))
#| message: false
#| warning: false
library(tidyverse)
library(mice)
library(gtsummary)
data(nhanes2)
nhanes2 |> tibble() |> print(n = Inf)
lm(bmi ~ age + hyp + chl, data = nhanes2) |>
tbl_regression() |>
add_glance_source_note()
library(questionr)
freq.na(nhanes2)
md.pattern(nhanes2)
imp <-  mice(nhanes2, m = 3, print = FALSE)
imp
stripplot(imp, col = c("red", "blue"), pch = c(1, 20), cex = c(2, 2))
complete(mice_dat, "all", include = T)
complete(mice_dat,include = T)
complete(mice_dat, "all", include = T)
complete(mice_dat, "long", include = T)
str(complete(mice_dat, "all", include = T))
str(complete(mice_dat, "long", include = T))
str(complete(mice_dat, "broad", include = T))
complete(mice_dat, "long", include = T)
complete(imp, 2)
complete(imp, "broad", include = T, print = F) |>
select(contains("bmi")) |> tibble() |> print(n = Inf)
temp <-  pool(imp)
fit_imp <- with(imp, lm(bmi ~ age + hyp + chl))
summary(fit_imp)
temp <-  pool(fit_imp)
temp
temp |> tbl_regression()
fit_imp |> tbl_regression()
fit_imp |>
tbl_regression() |>
add_glance_source_note()
