ids <- ids[index1:index2]
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity))
cat("\n\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ \n\n\n")
}
}
print_groups(df,1,3)
ids <-  unique(df$Subject)
ids
ids <- ids[index1:index2]
df <- sleepstudy
print_groups <- function(df,index1,index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity))
cat("\n\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ \n\n\n")
}
}
print_groups(df,1,3)
View(sleepstudy)
df <- sleepstudy
print_groups <- function(df,index1,index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity))
}
}
print_groups(df,1,3)
print_groups(df,3,3)
print_groups(df,1,1)
df <- sleepstudy
print_groups <- function(df,index1,index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, Subject, identity))
}
}
print_groups(df,1,1)
ids <-  unique(df$Subject)
ids
ids <- ids[1:1]
ids
df <- sleepstudy
print_groups <- function(df,index1,index2) {
ids <-  unique(df$Subject)
ids <- as.numeric(ids)
ids <- ids[index1:index2]
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity))
}
}
print_groups(df,1,1)
ids
print_groups <- function(df, index1, index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity))
}
}
print_groups(df,1,1)
print_groups(df,5,5)
print_groups(df,1,5)
print_groups(df,1,5)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity))
}
print_groups(df,1,5)
ids <-  unique(df$Subject)
ids <- ids[1:5]
ids
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity))[id]
}
}
print_groups(df,1,5)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity))[1]
}
}
print_groups(df,1,5)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity)[1])
}
}
print_groups(df,1,5)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity)[index1:index2])
}
}
print_groups(df,1,5)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity)[1])
}
}
print_groups(df,1,5)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity)[id])
}
}
print_groups(df,1,5)
print_groups(df,6:10)
ids
print_groups(df,6,10)
print_groups(df,6,30)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
if (index1 <= length(ids) & index2 <= length(ids)) {
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity)[id])
} else {
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
if (index1 <= length(ids) & index2 <= length(ids)) {
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity)[id])
}
}else {
print("There aren't that many groups in your dataset")
}
print_groups(df,6,30)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
if (index1 <= length(ids) & index2 <= length(ids)) {
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity)[id])
}
}else {
print("There aren't that many groups in your dataset")
}}
print_groups(df,6,30)
length(ids)
ids <-  unique(df$Subject)
length(ids)
print_groups(df,6,18)
print_groups(df,6,17)
print_groups(df,6,8)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
if (index1 <= length(ids) & index2 <= length(ids)) {
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity)[id])
}} else {
print("There aren't that many groups in your dataset")
}
print_groups(df,6,8)
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity)[id])
}} else {
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
if (index1 <= length(ids) & index2 <= length(ids)) {
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity)[id])
}} else {
print("There aren't that many groups in your dataset")
}}
print_groups(df,6,8)
print_groups <- function(df, index1, index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
if (index1 <= length(ids) & index2 <= length(ids)) {
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity)[id])
}} else {
print("There aren't that many groups in your dataset")
}}
print_groups(df,6,8)
print_groups(df,6,6)
length(ids)
print_groups <- function(df, index1, index2) {
ids <-  unique(df$Subject)
ids <- ids[index1:index2]
if (index1 <= length(ids) |index2 <= length(ids)) {
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity)[id])
}} else {
print("There aren't that many groups in your dataset")
}}
print_groups(df,6,6)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids_all <-  unique(df$Subject)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity)[id])
}} else {
print("There aren't that many groups in your dataset")
}}
print_groups(df,6,6)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids_all <-  unique(df$Subject)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df$Subject %in% id, ]
print(by(temp, temp$Subject, identity)[id])
}} else {
print("There aren't that many groups in your dataset")
}}
print_groups(df,6,6)
print_groups(df,6,19)
print_groups(df,6,18)
ids
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids_all <-  unique(df$Subject)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df$Subject %in% id,]
print(by(temp, temp$Subject, identity)[id])
}
} else {
print("There aren't that many groups in your dataset")
}
}
print_groups(df,6,9)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids_all <-  unique(df$Subject)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df$Subject %in% id,]
print(by(temp, temp$Subject, identity)[id])
cat("\n\n +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ \n\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
print_groups(df,6,9)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids_all <-  unique(df$Subject)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df$Subject %in% id,]
print(by(temp, temp$Subject, identity)[id])
cat("\n ----------------------------------- \n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
print_groups(df,6,9)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids_all <-  unique(df$Subject)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df$Subject %in% id,]
print(by(temp, temp$Subject, identity)[id])
cat("\n -----------------------------------")
}
} else {
print("There aren't that many groups in your dataset")
}
}
print_groups(df,6,9)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids_all <-  unique(df$Subject)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df$Subject %in% id,]
print(by(temp, temp$Subject, identity)[id])
cat("\n\n -----------------------------------")
}
} else {
print("There aren't that many groups in your dataset")
}
}
print_groups(df,6,9)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids_all <-  unique(df$Subject)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df$Subject %in% id,]
print(by(temp, temp$Subject, identity)[id])
cat("\n\n -----------------------------------\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
print_groups(df,6,9)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids_all <-  unique(df$Subject)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df$Subject %in% id,]
print(by(temp, temp$Subject, identity)[id])
cat("\n\n -----------------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
print_groups(df,6,9)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids_all <-  unique(df$Subject)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df$Subject %in% id,]
print(by(temp, temp$Subject, identity)[id])
cat("\n -----------------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
print_groups(df,6,9)
df <- sleepstudy
print_groups <- function(df, index1, index2) {
ids_all <-  unique(df$Subject)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df$Subject %in% id,]
print(by(temp, temp$Subject, identity)[id])
cat("-----------------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
print_groups(df,6,9)
df <- sleepstudy              # substitute your df name here
df$ids <- sleepstudy$Subject  # substitute your df and id variable names here
# Create function
print_groups <- function(df, index1, index2) {
ids_all <-  unique(df$ids)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df$ids %in% id,]
print(by(temp, temp$ids, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(df, 6, 9)
# Use function
print_groups(df, 6, 18)
# Use function
print_groups(df, 6, 19)
#| label: setup
#| message: false
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
sleepstudy |> as_tibble() |> print(n = 30)
#| label: function
# Create function
print_groups <- function(df, index1, index2) {
ids_all <-  unique(ids)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[ids %in% id,]
print(by(temp, temp$ids, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Get your data ready to use with function
df <- sleepstudy              # substitute your df name here
ids <- sleepstudy$Subject  # substitute your df and id variable names here
# Use function
print_groups(df, 1, 3)
#| label: function
# Create function
print_groups <- function(df, index1, index2) {
ids_all <-  unique(df$ids)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df$ids %in% id,]
print(by(temp, temp$ids, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Get your data ready to use with function
df <- sleepstudy              # substitute your df name here
df$ids <- sleepstudy$Subject  # substitute your df and id variable names here
# Use function
print_groups(df, 1, 3)
#| label: function
# Create function
print_groups <- function(df, index1, index2) {
ids_all <-  unique(df$ids)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df$ids %in% id,]
print(by(temp, temp$ids, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Get your data ready to use with function
df <- sleepstudy              # substitute your df name here
df$ids <- sleepstudy$Subject  # substitute your df and id variable names here
# Use function
print_groups(df, 1, 3)
#| label: function
# Create function
print_groups <- function(df, index1, index2) {
ids_all <-  unique(df$id)
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df$id %in% id,]
print(by(temp, temp$ids, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Get your data ready to use with function
df <- sleepstudy              # substitute your df name here
df$id <- sleepstudy$Subject   # substitute your df and id variable names here
df$Subject <- NULL            # optional
# Use function
print_groups(df, 1, 3)
