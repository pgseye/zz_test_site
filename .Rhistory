data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
print(ids_range)
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[ids_range %in% id,]
print(by(temp, temp$id, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
print(ids_range)
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df$id %in% id,]
print(by(temp, temp$id, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
print(ids_range)
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df[[id]] %in% id,]
print(by(temp, temp$id, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
print(ids_range)
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[df[["id"]] %in% id,]
print(by(temp, temp$id, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
print(ids_range)
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[id,]
print(by(temp, temp$id, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
print(ids_range)
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[eval(substitute(id), df) %in% id,]
print(by(temp, temp$id, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(get(id, df))
ids_range <- ids_all[index1:index2]
print(ids_range)
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[get(id, df) %in% id,]
print(by(temp, temp$id, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(get(id, df))
ids_range <- ids_all[index1:index2]
print(ids_range)
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[get(id, df) %in% id,]
print(by(temp, temp$id, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, "Subject", 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(get(id, df))
print(ids_all)
ids_range <- ids_all[index1:index2]
print(ids_range)
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
# for (id in ids_range) {
#   temp <- df[get(id, df) %in% id,]
#   print(by(temp, temp$id, identity)[id])
#   cat("----------------------------\n\n")
# }
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, "Subject", 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(get(id, df))
print(ids_all)
ids_range <- ids_all[index1:index2]
print(ids_range)
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
# for (id in ids_range) {
#   temp <- df[get(id, df) %in% id,]
#   print(by(temp, temp$id, identity)[id])
#   cat("----------------------------\n\n")
# }
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
print(ids_range)
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
# for (id in ids_range) {
#   temp <- df[eval(substitute(id), df) %in% id,]
#   print(by(temp, temp$id, identity)[id])
#   cat("----------------------------\n\n")
# }
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
a <- eval(substitute(id), df)
temp <- df[substitute(a) %in% id,]
print(by(temp, temp$id, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
a <- eval(substitute(id), df)
temp <- df[substitute(a) %in% id,]
print(temp)
#print(by(temp, temp$id, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
a <- eval(substitute(id), df)
print(a)
temp <- df[substitute(a) %in% id,]
#print(by(temp, temp$id, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
a <- eval(substitute(id), df)
print(a)
temp <- df[(substitute(a), df) %in% id,]
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
a <- eval(substitute(id), df)
print(a)
temp <- df[substitute(a) %in% id,]
#print(by(temp, temp$id, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id2 in ids_range) {
temp <- df[substitute(id) %in% id2,]
#print(by(temp, temp$id, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id2 in ids_range) {
temp <- df[eval(substitute(id), df) %in% id2,]
#print(by(temp, temp$id, identity)[id])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id2 in ids_range) {
temp <- df[eval(substitute(id), df) %in% id2,]
print(by(temp, temp$id, identity)[id2])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id2 in ids_range) {
temp <- df[eval(substitute(id), df) %in% id2,]
print(temp)
#print(by(temp, temp$id, identity)[id2])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id in ids_range) {
temp <- df[eval(substitute(id), df) %in% id,]
print(temp)
#print(by(temp, temp$id, identity)[id2])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id2 in ids_range) {
temp <- df[eval(substitute(id), df) %in% id2,]
print(temp)
#print(by(temp, temp$id, identity)[id2])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id2 in ids_range) {
temp <- df[eval(substitute(id), df) %in% id2,]
print(temp)
print(by(temp, temp$id, identity)[id2])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id2 in ids_range) {
print(df[eval(substitute(id), df) %in% id2,])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 1, 3)
rm(list = ls())
library(lme4)
library(dplyr)
# Load data
data("sleepstudy")
print_groups <- function(df, id, index1, index2) {
ids_all <-  unique(eval(substitute(id), df))
ids_range <- ids_all[index1:index2]
if (index1 <= length(ids_all) & index2 <= length(ids_all)) {
for (id2 in ids_range) {
print(df[eval(substitute(id), df) %in% id2,])
cat("----------------------------\n\n")
}
} else {
print("There aren't that many groups in your dataset")
}
}
# Use function
print_groups(sleepstudy, Subject, 5, 8)
ids_range
